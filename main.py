from sys import*
import matplotlib.pyplot as plt
from tkinter import*


def mycom():
	Button1 = Button(win, text = 'WAIT...', bg = 'YELLOW')
	Button1.place(x = 10, y = 400, width = 265, height = 40)


def Tex(xx, yy, width_d, height_h, texted):
	Label1 = Label(win, text = texted, fg = 'red')
	Label1.place(x = xx, y = yy, width = width_d, height = height_h)


def Del(yy):
	Button1 = Button(win, text = '', bg = 'grey')
	Button1.place(x = 0, y = yy, width = 285, height = 2)

def Answer(xx, yy, width_d, height_h, tex):
	Label1 = Label(win, text = tex)
	Label1.place(x = xx, y = yy, width = width_d, height = height_h)

def save_K_700():
	global K_700
	K_700 = Entr_K_700.get()
	K_700 = int(K_700)
	
def save_K_701():
	global K_701
	K_701 = Entr_K_701.get()
	K_701 = int(K_701)

def save_DT():
	global DT
	DT = Entr_DT.get()
	DT = int(DT)

def save_MTZ2():
	global MTZ2
	MTZ2 = Entr_MTZ2.get()
	MTZ2 = int(MTZ2)

def save_MZT():
	global MZT
	MZT = Entr_MZT.get()
	MZT = int(MZT)

def save_T40():
	global T40
	T40 = Entr_T40.get()
	T40 = int(T40)

def save_T25():
	global T25
	T25 = Entr_T25.get()
	T25 = int(T25)

def save_T16():
	global T16
	T16 = Entr_T16.get()
	T16 = int(T16)

def save_UAZ():
	global UAZ
	UAZ = Entr_UAZ.get()
	UAZ = int(UAZ)

def save_KAMAZ():
	global KAMAZ
	KAMAZ = Entr_KAMAZ.get()
	KAMAZ = int(KAMAZ)

def save_GAZ():
	global GAZ
	GAZ = Entr_GAZ.get()
	GAZ = int(GAZ)

def save_ZIL():
	global ZIL
	ZIL = Entr_ZIL.get()
	ZIL = int(ZIL)

def save_CK():
	global CK
	CK = Entr_CK.get()
	CK = int(CK)

def save_KKU():
	global KKU
	KKU = Entr_KKU.get()
	KKU = int(KKU)

def save_PLN():
	global PLN
	PLN = Entr_PLN.get()
	PLN = int(PLN)

def save_SZ():
	global SZ
	SZ = Entr_SZ.get()
	SZ = int(SZ)

def save_BDT():
	global BDT
	BDT = Entr_BDT.get()
	BDT = int(BDT)

	

win = Tk()
win.title('KURSOVAYA TO')
win.config(width = 285, height = 450)

Tex(10,10,250,20,'ВВЕДИТЕ КОЛИЧЕСТВО МТП')

Del(30)

Answer(10,40,70,20,'K-700')
Entr_K_700 = Entry(win)
Entr_K_700.place(x = 90, y = 40, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_K_700)
Button1.place(x = 190, y = 40, width = 70, height = 20)


Answer(10,60,70,20,'K-701')
Entr_K_701 = Entry(win)
Entr_K_701.place(x = 90, y = 60, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_K_701)
Button1.place(x = 190, y = 60, width = 70, height = 20)


Answer(10,80,70,20,'ДТ-75')
Entr_DT = Entry(win)
Entr_DT.place(x = 90, y = 80, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_DT)
Button1.place(x = 190, y = 80, width = 70, height = 20)


Answer(10,100,70,20,'Т-40')
Entr_T40 = Entry(win)
Entr_T40.place(x = 90, y = 100, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_T40)
Button1.place(x = 190, y = 100, width = 70, height = 20)


Answer(10,120,70,20,'Т-25')
Entr_T25 = Entry(win)
Entr_T25.place(x = 90, y = 120, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_T25)
Button1.place(x = 190, y = 120, width = 70, height = 20)


Answer(10,140,70,20,'Т-16')
Entr_T16 = Entry(win)
Entr_T16.place(x = 90, y = 140, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_T16)
Button1.place(x = 190, y = 140, width = 70, height = 20)


Answer(10,160,70,20,'УАЗ-469')
Entr_UAZ = Entry(win)
Entr_UAZ.place(x = 90, y = 160, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_UAZ)
Button1.place(x = 190, y = 160, width = 70, height = 20)


Answer(10,180,70,20,'КАМАЗ-5320')
Entr_KAMAZ = Entry(win)
Entr_KAMAZ.place(x = 90, y = 180, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_KAMAZ)
Button1.place(x = 190, y = 180, width = 70, height = 20)


Answer(10,200,70,20,'ГАЗ-53')
Entr_GAZ = Entry(win)
Entr_GAZ.place(x = 90, y = 200, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_GAZ)
Button1.place(x = 190, y = 200, width = 70, height = 20)


Answer(10,220,70,20,'ЗИЛ-130')
Entr_ZIL = Entry(win)
Entr_ZIL.place(x = 90, y = 220, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_ZIL)
Button1.place(x = 190, y = 220, width = 70, height = 20)


Answer(10,240,70,20,'СК-5')
Entr_CK = Entry(win)
Entr_CK.place(x = 90, y = 240, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_CK)
Button1.place(x = 190, y = 240, width = 70, height = 20)


Answer(10,260,70,20,'ККУ-2А')
Entr_KKU = Entry(win)
Entr_KKU.place(x = 90, y = 260, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_KKU)
Button1.place(x = 190, y = 260, width = 70, height = 20)


Answer(10,280,70,20,'ПЛН-4-35')
Entr_PLN = Entry(win)
Entr_PLN.place(x = 90, y = 280, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_PLN)
Button1.place(x = 190, y = 280, width = 70, height = 20)


Answer(10,300,70,20,'СЗ-3-6')
Entr_SZ = Entry(win)
Entr_SZ.place(x = 90, y = 300, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_SZ)
Button1.place(x = 190, y = 300, width = 70, height = 20)


Answer(10,320,70,20,'БДТ-3')
Entr_BDT = Entry(win)
Entr_BDT.place(x = 90, y = 320, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_BDT)
Button1.place(x = 190, y = 320, width = 70, height = 20)

Answer(10,340,70,20,'МТЗ-82')
Entr_MTZ2 = Entry(win)
Entr_MTZ2.place(x = 90, y = 340, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_MTZ2)
Button1.place(x = 190, y = 340, width = 70, height = 20)

Answer(10,360,70,20,'МТЗ-80')
Entr_MZT = Entry(win)
Entr_MZT.place(x = 90, y = 360, width = 70, height = 20)
Button1 = Button(win, text = 'SAVE', command = save_MZT)
Button1.place(x = 190, y = 360, width = 70, height = 20)




Del(390)


Button1 = Button(win, text = 'RUN >>>', bg = 'green', command = mycom)
Button1.place(x = 10, y = 400, width = 265, height = 40)



win.mainloop()




##############################################################################
print ()
print (("_") * 75)
print ("ЗАДАНИЕ К КУРСОВОМУ ПРОЕКТУ:")
print (("_") * 75)
print ()

# ТАБЛИЦА ИЗ ПЕРЕМЕННЫХ
# pip install tabulate
from tabulate import tabulate



d = { 'K-700': K_700, 'K-701': K_701,
	 'ДТ-75 МВ': DT, 'МТЗ-82': MTZ2, 'МТЗ-80': MZT,
	 'Т-40': T40, 'Т-25': T25, 'Т-16': T16,
	  'УАЗ-469': UAZ,  'KAMAЗ-5320':KAMAZ, 'ГАЗ-53 А':GAZ,
	  'ЗИЛ-130': ZIL, 'CK-5': CK, 'KKУ-2 А': KKU,
	  'ПЛН-4-35': PLN, 'СЗ-3-6': SZ, 'БДТ-3': BDT,
	  }
print(tabulate(d.items(), headers=['МАРКА', 'КОЛ-ВО'], tablefmt="grid"))


##############################################################################
##############################################################################

##############################################################################

from time import sleep
print(">LOADING")
sleep(2)
##############################################################################
print ()
print (("_") * 75)
print ("РАСЧЕТНАЯ ЧАСТЬ:")
print (("_") * 75)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("К-700:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################

# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙС
K_700_NKR_U = 3200
K_700_NKR_N = 11970
K_700_NTR_N = 5120
K_700_NTO_3_N = 2560
K_700_NTO_2_N = 640
K_700_NTO_1_N = 160
K_700_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_K_700 = int (K_700_NKR_U) * int (K_700) / int (K_700_NKR_N) # Nкр
NKR_K_700_d = int_r(NKR_K_700) # ОКРУГЛЕНИЕ
NTR_K_700 = int (K_700_NKR_U) * int (K_700) / int (K_700_NTR_N) - NKR_K_700_d # Nтр
NTR_K_700_d = int_r(NTR_K_700) # ОКРУГЛЕНИЕ
NTO_3_K_700 = int (K_700_NKR_U) * int (K_700) / int (K_700_NTO_3_N) - NKR_K_700_d - NTR_K_700_d # Nто-3
NTO_3_K_700_d = int_r(NTO_3_K_700) # ОКРУГЛЕНИЕ
NTO_2_K_700 = int (K_700_NKR_U) * int (K_700) / int (K_700_NTO_2_N) - NKR_K_700_d - NTR_K_700_d - NTO_3_K_700_d # Nто-2
NTO_2_K_700_d = int_r(NTO_2_K_700) # ОКРУГЛЕНИЕ
NTO_1_K_700 = int (K_700_NKR_U) * int (K_700) / int (K_700_NTO_1_N) - NKR_K_700_d - NTR_K_700_d - NTO_3_K_700_d - NTO_2_K_700_d # Nто-1
NTO_1_K_700_d = int_r(NTO_1_K_700) # ОКРУГЛЕНИЕ
K_700_N_CTO = int (K_700_NCTO) * int (K_700) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(K_700_NKR_U)+" * "+str(K_700)+" / "+str(K_700_NKR_N)+" = "+str(NKR_K_700))


# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
#NKR_K_700 = NKR_K_700_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_K_700))


#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(K_700_NKR_U)+" * "+str(K_700)+" / "+str(K_700_NTR_N)+" - "+str(NKR_K_700)+" = "+str(NTR_K_700))

# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
#NTR_K_700 = NTR_K_700_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_K_700))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(K_700_NKR_U)+" * "+str(K_700)+" / "+str(K_700_NTO_3_N)+" - "+str(NKR_K_700)+" - "+str(NTR_K_700)+" = "+str(NTO_3_K_700))

# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
#NTO_3_K_700 = NTO_3_K_700_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_K_700))


#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(K_700_NKR_U)+" * "+str(K_700)+" / "+str(K_700_NTO_2_N)+" - "+str(NKR_K_700)+" - "+str(NTR_K_700)+" - "+str(NTO_3_K_700)+" = "+str(NTO_2_K_700))

# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
#NTO_2_K_700 = NTO_2_K_700_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_K_700))


#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(K_700_NKR_U)+" * "+str(K_700)+" / "+str(K_700_NTO_1_N)+" - "+str(NKR_K_700)+" - "+str(NTR_K_700)+" - "+str(NTO_3_K_700)+" - "+str(NTO_2_K_700)+" = "+str(NTO_1_K_700))

# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
#NTO_1_K_700 = NTO_1_K_700_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_K_700))


#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(K_700_NCTO)+" * "+str(K_700)+" = "+str(K_700_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("К-701:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
K_701_NKR_U = 3500
K_701_NKR_N = 19220
K_701_NTR_N = 6200
K_701_NTO_3_N = 3120
K_701_NTO_2_N = 780
K_701_NTO_1_N = 195
K_701_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_K_701 = int (K_701_NKR_U) * int (K_701) / int (K_701_NKR_N) # Nкр
NKR_K_701_d = int_r(NKR_K_701) # ОКРУГЛЕНИЕ
NTR_K_701 = int (K_701_NKR_U) * int (K_701) / int (K_701_NTR_N) - NKR_K_701_d # Nтр
NTR_K_701_d = int_r(NTR_K_701) # ОКРУГЛЕНИЕ
NTO_3_K_701 = int (K_701_NKR_U) * int (K_701) / int (K_700_NTO_3_N) - NKR_K_701_d - NTR_K_701_d # Nто-3
NTO_3_K_701_d = int_r(NTO_3_K_701) # ОКРУГЛЕНИЕ
NTO_2_K_701 = int (K_701_NKR_U) * int (K_701) / int (K_701_NTO_2_N) - NKR_K_701_d - NTR_K_701_d - NTO_3_K_701_d # Nто-2
NTO_2_K_701_d = int_r(NTO_2_K_700) # ОКРУГЛЕНИЕ
NTO_1_K_701 = int (K_701_NKR_U) * int (K_701) / int (K_701_NTO_1_N) - NKR_K_701_d - NTR_K_701_d - NTO_3_K_701_d - NTO_2_K_701_d # Nто-1
NTO_1_K_701_d = int_r(NTO_1_K_701) # ОКРУГЛЕНИЕ
K_701_N_CTO = int (K_701_NCTO) * int (K_701) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(K_701_NKR_U)+" * "+str(K_701)+" / "+str(K_701_NKR_N)+" = "+str(NKR_K_701))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_K_701 = NKR_K_701_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_K_701))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(K_701_NKR_U)+" * "+str(K_701)+" / "+str(K_701_NTR_N)+" - "+str(NKR_K_701)+" = "+str(NTR_K_701))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_K_701 = NTR_K_701_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_K_701))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(K_701_NKR_U)+" * "+str(K_701)+" / "+str(K_701_NTO_3_N)+" - "+str(NKR_K_701)+" - "+str(NTR_K_701)+" = "+str(NTO_3_K_701))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_K_701 = NTO_3_K_701_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_K_701))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(K_701_NKR_U)+" * "+str(K_701)+" / "+str(K_701_NTO_2_N)+" - "+str(NKR_K_701)+" - "+str(NTR_K_701)+" - "+str(NTO_3_K_701)+" = "+str(NTO_2_K_701))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_K_701 = NTO_2_K_701_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_K_701))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(K_701_NKR_U)+" * "+str(K_701)+" / "+str(K_701_NTO_1_N)+" - "+str(NKR_K_701)+" - "+str(NTR_K_701)+" - "+str(NTO_3_K_701)+" - "+str(NTO_2_K_701)+" = "+str(NTO_1_K_701))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_K_701 = NTO_1_K_701_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_K_701))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(K_701_NCTO)+" * "+str(K_701)+" = "+str(K_701_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ДТ-75 МВ:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
DT_NKR_U = 1150
DT_NKR_N = 5800
DT_NTR_N = 2480
DT_NTO_3_N = 1240
DT_NTO_2_N = 310
DT_NTO_1_N = 77
DT_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_DT = int (DT_NKR_U) * int (DT) / int (DT_NKR_N) # Nкр
NKR_DT_d = int_r(NKR_DT) # ОКРУГЛЕНИЕ
NTR_DT = int (DT_NKR_U) * int (DT) / int (DT_NTR_N) - NKR_DT_d # Nтр
NTR_DT_d = int_r(NTR_DT) # ОКРУГЛЕНИЕ
NTO_3_DT = int (DT_NKR_U) * int (DT) / int (DT_NTO_3_N) - NKR_DT_d - NTR_DT_d # Nто-3
NTO_3_DT_d = int_r(NTO_3_DT) # ОКРУГЛЕНИЕ
NTO_2_DT = int (DT_NKR_U) * int (DT) / int (DT_NTO_2_N) - NKR_DT_d - NTR_DT_d - NTO_3_DT_d # Nто-2
NTO_2_DT_d = int_r(NTO_2_DT) # ОКРУГЛЕНИЕ
NTO_1_DT = int (DT_NKR_U) * int (DT) / int (DT_NTO_1_N) - NKR_DT_d - NTR_DT_d - NTO_3_DT_d - NTO_2_DT_d # Nто-1
NTO_1_DT_d = int_r(NTO_1_DT) # ОКРУГЛЕНИЕ
DT_N_CTO = int (DT_NCTO) * int (DT) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(DT_NKR_U)+" * "+str(DT)+" / "+str(DT_NKR_N)+" = "+str(NKR_DT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_DT = NKR_DT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_DT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(DT_NKR_U)+" * "+str(DT)+" / "+str(DT_NTR_N)+" - "+str(NKR_DT)+" = "+str(NTR_DT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_DT = NTR_DT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_DT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(DT_NKR_U)+" * "+str(DT)+" / "+str(DT_NTO_3_N)+" - "+str(NKR_DT)+" - "+str(NTR_DT)+" = "+str(NTO_3_DT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_DT = NTO_3_DT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_DT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(DT_NKR_U)+" * "+str(DT)+" / "+str(DT_NTO_2_N)+" - "+str(NKR_DT)+" - "+str(NTR_DT)+" - "+str(NTO_3_DT)+" = "+str(NTO_2_DT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_DT = NTO_2_DT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_DT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(DT_NKR_U)+" * "+str(DT)+" / "+str(DT_NTO_1_N)+" - "+str(NKR_DT)+" - "+str(NTR_DT)+" - "+str(NTO_3_DT)+" - "+str(NTO_2_DT)+" = "+str(NTO_1_DT))
# ПРИРВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_DT = NTO_1_DT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_DT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(DT_NCTO)+" * "+str(DT)+" = "+str(DT_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("МТЗ-82:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
MTZ2_NKR_U = 1300
MTZ2_NKR_N = 4480
MTZ2_NTR_N = 1680
MTZ2_NTO_3_N = 840
MTZ2_NTO_2_N = 210
MTZ2_NTO_1_N = 52
MTZ2_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_MTZ2 = int (MTZ2_NKR_U) * int (MTZ2) / int (MTZ2_NKR_N) # Nкр
NKR_MTZ2_d = int_r(NKR_MTZ2) # ОКРУГЛЕНИЕ
NTR_MTZ2 = int (MTZ2_NKR_U) * int (MTZ2) / int (MTZ2_NTR_N) - NKR_MTZ2_d # Nтр
NTR_MTZ2_d = int_r(NTR_MTZ2) # ОКРУГЛЕНИЕ
NTO_3_MTZ2 = int (MTZ2_NKR_U) * int (MTZ2) / int (MTZ2_NTO_3_N) - NKR_MTZ2_d - NTR_MTZ2_d # Nто-3
NTO_3_MTZ2_d = int_r(NTO_3_MTZ2) # ОКРУГЛЕНИЕ
NTO_2_MTZ2 = int (MTZ2_NKR_U) * int (MTZ2) / int (MTZ2_NTO_2_N) - NKR_MTZ2_d - NTR_MTZ2_d - NTO_3_MTZ2_d # Nто-2
NTO_2_MTZ2_d = int_r(NTO_2_MTZ2) # ОКРУГЛЕНИЕ
NTO_1_MTZ2 = int (MTZ2_NKR_U) * int (MTZ2) / int (MTZ2_NTO_1_N) - NKR_MTZ2_d - NTR_MTZ2_d - NTO_3_MTZ2_d - NTO_2_MTZ2_d # Nто-1
NTO_1_MTZ2_d = int_r(NTO_1_MTZ2) # ОКРУГЛЕНИЕ
MTZ2_N_CTO = int (MTZ2_NCTO) * int (MTZ2) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(MTZ2_NKR_U)+" * "+str(MTZ2)+" / "+str(MTZ2_NKR_N)+" = "+str(NKR_MTZ2))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_K_700 = NKR_MTZ2_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_MTZ2))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(MTZ2_NKR_U)+" * "+str(MTZ2)+" / "+str(MTZ2_NTR_N)+" - "+str(NKR_MTZ2)+" = "+str(NTR_MTZ2))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_MTZ2 = NTR_MTZ2_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_MTZ2))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(MTZ2_NKR_U)+" * "+str(MTZ2)+" / "+str(MTZ2_NTO_3_N)+" - "+str(NKR_MTZ2)+" - "+str(NTR_MTZ2)+" = "+str(NTO_3_MTZ2))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_MTZ2 = NTO_3_MTZ2_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_MTZ2))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(MTZ2_NKR_U)+" * "+str(MTZ2)+" / "+str(MTZ2_NTO_2_N)+" - "+str(NKR_MTZ2)+" - "+str(NTR_MTZ2)+" - "+str(NTO_3_MTZ2)+" = "+str(NTO_2_MTZ2))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_MTZ2 = NTO_2_MTZ2_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_MTZ2))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(MTZ2_NKR_U)+" * "+str(MTZ2)+" / "+str(MTZ2_NTO_1_N)+" - "+str(NKR_MTZ2)+" - "+str(NTR_MTZ2)+" - "+str(NTO_3_MTZ2)+" - "+str(NTO_2_MTZ2)+" = "+str(NTO_1_MTZ2))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_MTZ2 = NTO_1_MTZ2_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_MTZ2))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(MTZ2_NCTO)+" * "+str(MTZ2)+" = "+str(MTZ2_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("МТЗ-80:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
MZT_NKR_U = 1200
MZT_NKR_N = 4480
MZT_NTR_N = 1680
MZT_NTO_3_N = 840
MZT_NTO_2_N = 210
MZT_NTO_1_N = 52
MZT_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_MZT = int (MZT_NKR_U) * int (MZT) / int (MZT_NKR_N) # Nкр
NKR_MZT_d = int_r(NKR_MZT) # ОКРУГЛЕНИЕ
NTR_MZT = int (MZT_NKR_U) * int (MZT) / int (MZT_NTR_N) - NKR_MZT_d # Nтр
NTR_MZT_d = int_r(NTR_MZT) # ОКРУГЛЕНИЕ
NTO_3_MZT = int (MZT_NKR_U) * int (MZT) / int (MZT_NTO_3_N) - NKR_MZT_d - NTR_MZT_d # Nто-3
NTO_3_MZT_d = int_r(NTO_3_MZT) # ОКРУГЛЕНИЕ
NTO_2_MZT = int (MZT_NKR_U) * int (MZT) / int (MZT_NTO_2_N) - NKR_MZT_d - NTR_MZT_d - NTO_3_MZT_d # Nто-2
NTO_2_MZT_d = int_r(NTO_2_MZT) # ОКРУГЛЕНИЕ
NTO_1_MZT = int (MZT_NKR_U) * int (MZT) / int (MZT_NTO_1_N) - NKR_MZT_d - NTR_MZT_d - NTO_3_MZT_d - NTO_2_MZT_d # Nто-1
NTO_1_MZT_d = int_r(NTO_1_MZT) # ОКРУГЛЕНИЕ
MZT_N_CTO = int (MZT_NCTO) * int (MZT) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(MZT_NKR_U)+" * "+str(MZT)+" / "+str(MZT_NKR_N)+" = "+str(NKR_MZT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_MZT = NKR_MZT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_MZT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(MZT_NKR_U)+" * "+str(MZT)+" / "+str(MZT_NTR_N)+" - "+str(NKR_MZT)+" = "+str(NTR_MZT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_MZT = NTR_MZT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_MZT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(MZT_NKR_U)+" * "+str(MZT)+" / "+str(MZT_NTO_3_N)+" - "+str(NKR_MZT)+" - "+str(NTR_MZT)+" = "+str(NTO_3_MZT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_MZT = NTO_3_MZT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_MZT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(MZT_NKR_U)+" * "+str(MZT)+" / "+str(MZT_NTO_2_N)+" - "+str(NKR_MZT)+" - "+str(NTR_MZT)+" - "+str(NTO_3_MZT)+" = "+str(NTO_2_MZT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_MZT = NTO_2_MZT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_MZT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(MZT_NKR_U)+" * "+str(MZT)+" / "+str(MZT_NTO_1_N)+" - "+str(NKR_MZT)+" - "+str(NTR_MZT)+" - "+str(NTO_3_MZT)+" - "+str(NTO_2_MZT)+" = "+str(NTO_1_MZT))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_MZT = NTO_1_MZT_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_MZT))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(MZT_NCTO)+" * "+str(MZT)+" = "+str(MZT_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("Т-40:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
T40_NKR_U = 700
T40_NKR_N = 2630
T40_NTR_N = 1200
T40_NTO_3_N = 600
T40_NTO_2_N = 150
T40_NTO_1_N = 37
T40_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_T40 = int (T40_NKR_U) * int (T40) / int (T40_NKR_N) # Nкр
NKR_T40_d = int_r(NKR_T40) # ОКРУГЛЕНИЕ
NTR_T40 = int (T40_NKR_U) * int (T40) / int (T40_NTR_N) - NKR_T40_d # Nтр
NTR_T40_d = int_r(NTR_T40) # ОКРУГЛЕНИЕ
NTO_3_T40 = int (T40_NKR_U) * int (T40) / int (T40_NTO_3_N) - NKR_T40_d - NTR_T40_d # Nто-3
NTO_3_T40_d = int_r(NTO_3_T40) # ОКРУГЛЕНИЕ
NTO_2_T40 = int (T40_NKR_U) * int (T40) / int (T40_NTO_2_N) - NKR_T40_d - NTR_T40_d - NTO_3_T40_d # Nто-2
NTO_2_T40_d = int_r(NTO_2_T40) # ОКРУГЛЕНИЕ
NTO_1_T40 = int (T40_NKR_U) * int (T40) / int (T40_NTO_1_N) - NKR_T40_d - NTR_T40_d - NTO_3_T40_d - NTO_2_T40_d # Nто-1
NTO_1_T40_d = int_r(NTO_1_T40) # ОКРУГЛЕНИЕ
T40_N_CTO = int (T40_NCTO) * int (T40) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(T40_NKR_U)+" * "+str(T40)+" / "+str(T40_NKR_N)+" = "+str(NKR_T40))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_T40 = NKR_T40_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_T40))
#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(T40_NKR_U)+" * "+str(T40)+" / "+str(T40_NTR_N)+" - "+str(NKR_T40)+" = "+str(NTR_T40))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_T40 = NTR_T40_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_T40))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(T40_NKR_U)+" * "+str(T40)+" / "+str(T40_NTO_3_N)+" - "+str(NKR_T40)+" - "+str(NTR_T40)+" = "+str(NTO_3_T40))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_T40 = NTO_3_T40_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_T40))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(T40_NKR_U)+" * "+str(T40)+" / "+str(T40_NTO_2_N)+" - "+str(NKR_T40)+" - "+str(NTR_T40)+" - "+str(NTO_3_T40)+" = "+str(NTO_2_T40))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_T40 = NTO_2_T40_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_T40))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(T40_NKR_U)+" * "+str(T40)+" / "+str(T40_NTO_1_N)+" - "+str(NKR_T40)+" - "+str(NTR_T40)+" - "+str(NTO_3_T40)+" - "+str(NTO_2_T40)+" = "+str(NTO_1_T40))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_T40 = NTO_1_T40_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_T40))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(T40_NCTO)+" * "+str(T40)+" = "+str(T40_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("Т-25:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################

#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
T25_NKR_U = 350
T25_NKR_N = 1940
T25_NTR_N = 740
T25_NTO_3_N = 370
T25_NTO_2_N = 92
T25_NTO_1_N = 23
T25_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_T25 = int (T25_NKR_U) * int (T25) / int (T25_NKR_N) # Nкр
NKR_T25_d = int_r(NKR_T25) # ОКРУГЛЕНИЕ
NTR_T25 = int (T25_NKR_U) * int (T25) / int (T25_NTR_N) - NKR_T25_d # Nтр
NTR_T25_d = int_r(NTR_T25) # ОКРУГЛЕНИЕ
NTO_3_T25 = int (T25_NKR_U) * int (T25) / int (T25_NTO_3_N) - NKR_T25_d - NTR_T25_d # Nто-3
NTO_3_T25_d = int_r(NTO_3_T25) # ОКРУГЛЕНИЕ
NTO_2_T25 = int (T25_NKR_U) * int (T25) / int (T25_NTO_2_N) - NKR_T25_d - NTR_T25_d - NTO_3_T25_d # Nто-2
NTO_2_T25_d = int_r(NTO_2_T25) # ОКРУГЛЕНИЕ
NTO_1_T25 = int (T25_NKR_U) * int (T25) / int (T25_NTO_1_N) - NKR_T25_d - NTR_T25_d - NTO_3_T25_d - NTO_2_T25_d # Nто-1
NTO_1_T25_d = int_r(NTO_1_T25) # ОКРУГЛЕНИЕ
T25_N_CTO = int (T25_NCTO) * int (T25) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(T25_NKR_U)+" * "+str(T25)+" / "+str(T25_NKR_N)+" = "+str(NKR_T25))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_T25 = NKR_T25_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_T25))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(T25_NKR_U)+" * "+str(T25)+" / "+str(T25_NTR_N)+" - "+str(NKR_T25)+" = "+str(NTR_T25))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_T25= NTR_T25_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_T25))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(T25_NKR_U)+" * "+str(T25)+" / "+str(T25_NTO_3_N)+" - "+str(NKR_T25)+" - "+str(NTR_T25)+" = "+str(NTO_3_T25))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_T25 = NTO_3_T25_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_T25))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(T25_NKR_U)+" * "+str(T25)+" / "+str(T25_NTO_2_N)+" - "+str(NKR_T25)+" - "+str(NTR_T25)+" - "+str(NTO_3_T25)+" = "+str(NTO_2_T25))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_T25 = NTO_2_T25_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_T25))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(T25_NKR_U)+" * "+str(T25)+" / "+str(T25_NTO_1_N)+" - "+str(NKR_T25)+" - "+str(NTR_T25)+" - "+str(NTO_3_T25)+" - "+str(NTO_2_T25)+" = "+str(NTO_1_T25))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_T25 = NTO_1_T25_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_T25))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(T25_NCTO)+" * "+str(T25)+" = "+str(T25_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("Т-16:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
T16_NKR_U = 200
T16_NKR_N = 1320
T16_NTR_N = 510
T16_NTO_3_N = 255
T16_NTO_2_N = 64
T16_NTO_1_N = 16
T16_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_T16 = int (T16_NKR_U) * int (T16) / int (T16_NKR_N) # Nкр
NKR_T16_d = int_r(NKR_T16) # ОКРУГЛЕНИЕ
NTR_T16 = int (T16_NKR_U) * int (T16) / int (T16_NTR_N) - NKR_T16_d # Nтр
NTR_T16_d = int_r(NTR_T16) # ОКРУГЛЕНИЕ
NTO_3_T16 = int (T16_NKR_U) * int (T16) / int (T16_NTO_3_N) - NKR_T16_d - NTR_T16_d # Nто-3
NTO_3_T16_d = int_r(NTO_3_T16) # ОКРУГЛЕНИЕ
NTO_2_T16 = int (T16_NKR_U) * int (T16) / int (T16_NTO_2_N) - NKR_T16_d - NTR_T16_d - NTO_3_T16_d # Nто-2
NTO_2_T16_d = int_r(NTO_2_T16) # ОКРУГЛЕНИЕ
NTO_1_T16 = int (T16_NKR_U) * int (T16) / int (T16_NTO_1_N) - NKR_T16_d - NTR_T16_d - NTO_3_T16_d - NTO_2_T16_d # Nто-1
NTO_1_T16_d = int_r(NTO_1_T16) # ОКРУГЛЕНИЕ
T16_N_CTO = int (T16_NCTO) * int (T16) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(T16_NKR_U)+" * "+str(T16)+" / "+str(T16_NKR_N)+" = "+str(NKR_T16))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_T16 = NKR_T16_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_T16))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nтр"+" = "+str(T16_NKR_U)+" * "+str(T16)+" / "+str(T16_NTR_N)+" - "+str(NKR_T16)+" = "+str(NTR_T16))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTR_T16 = NTR_T16_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTR_T16))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-3"+" = "+str(T16_NKR_U)+" * "+str(T16)+" / "+str(T16_NTO_3_N)+" - "+str(NKR_T16)+" - "+str(NTR_T16)+" = "+str(NTO_3_T16))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_3_T16 = NTO_3_T16_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_3_T16))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-2"+" = "+str(T16_NKR_U)+" * "+str(T16)+" / "+str(T16_NTO_2_N)+" - "+str(NKR_T16)+" - "+str(NTR_T16)+" - "+str(NTO_3_T16)+" = "+str(NTO_2_T16))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_T16 = NTO_2_T16_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_T16))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nто-1"+" = "+str(T16_NKR_U)+" * "+str(T16)+" / "+str(T16_NTO_1_N)+" - "+str(NKR_T16)+" - "+str(NTR_T16)+" - "+str(NTO_3_T16)+" - "+str(NTO_2_T16)+" = "+str(NTO_1_T16))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_T16 = NTO_1_T16_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_T16))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-6
print("Nсто"+" = "+str(T16_NCTO)+" * "+str(T16)+" = "+str(T16_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ПЛН-4-35:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#_______________________________________________________
# ЦИКЛ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#_______________________________________________________
# ВВЕДЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
NTR_PLN = 0.8
NCTO_PLN = 2


#________________________________________________________
# РАСЧЕТ ФОРМУЛ
PLN_NTR = int(PLN) * float(NTR_PLN)
PLN_NTR_d= int_r(PLN_NTR)
PLN_NCTO = int(PLN) * int(NCTO_PLN)

#
print ("Nтр"+ " = "+str(PLN)+" * "+str(NTR_PLN)+" = "+str(PLN_NTR))
print ("ПРИНИМАЮ: "+ str(PLN_NTR_d))
print ("Nсто"+ " = "+str(PLN)+" * "+str(NCTO_PLN)+" = "+str(PLN_NCTO))

#__________________________________________________________

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("БДТ_3:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#_______________________________________________________
# ЦИКЛ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#_______________________________________________________
# ВВЕДЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
NTR_BDT = 0.78
NCTO_BDT = 2


#________________________________________________________
# РАСЧЕТ ФОРМУЛ
BDT_NTR = int(BDT) * float(NTR_BDT)
BDT_NTR_d = int_r(BDT_NTR)
BDT_NCTO = int(BDT) * int(NCTO_BDT)

#
print ("Nтр"+ " = "+str(BDT)+" * "+str(NTR_BDT)+" = "+str(BDT_NTR))
print ("ПРИНИМАЮ: "+ str(BDT_NTR_d))
print ("Nсто"+ " = "+str(BDT)+" * "+str(NCTO_BDT)+" = "+str(BDT_NCTO))


#_________________________________________________________

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("СЗ-3-6:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#_______________________________________________________
# ЦИКЛ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#_______________________________________________________
# ВВЕДЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
NTR_SZ = 0.78
NCTO_SZ = 2


#________________________________________________________
# РАСЧЕТ ФОРМУЛ
SZ_NTR = int(SZ) * float(NTR_SZ)
SZ_NTR_d = int_r(SZ_NTR)
SZ_NCTO = int(SZ) * int(NCTO_SZ)

#
print ("Nтр"+ " = "+str(SZ)+" * "+str(NTR_SZ)+" = "+str(SZ_NTR))
print ("ПРИНИМАЮ: "+ str(SZ_NTR_d))
print ("Nсто"+ " = "+str(SZ)+" * "+str(NCTO_SZ)+" = "+str(SZ_NCTO))


#________________________________________________________

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ККУ-2 А:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################

#_______________________________________________________
# ЦИКЛ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#_______________________________________________________
# ВВЕДЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
NTR_KKU = 0.8
NCTO_KKU = 2


#________________________________________________________
# РАСЧЕТ ФОРМУЛ
KKU_NTR = int(KKU) * float(NTR_KKU)
KKU_NTR_d= int_r(KKU_NTR)
KKU_NCTO = int(KKU) * int(NCTO_KKU)

#
print ("Nтр"+ " = "+str(KKU)+" * "+str(NTR_KKU)+" = "+str(KKU_NTR))
print ("ПРИНИМАЮ: "+ str(KKU_NTR_d))
print ("Nсто"+ " = "+str(KKU)+" * "+str(NCTO_KKU)+" = "+str(KKU_NCTO))


##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("СК-5 :")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################

#_______________________________________________________
# ЦИКЛ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#_______________________________________________________
# ВВЕДЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
CK_NKR = 0.15
CK_NTR = 0.6
CK_NTO = 220
CK_NTO_2 = 240
CK_NTO_1 = 60
CK_NCTO = 1

#________________________________________________________
# РАСЧЕТ ФОРМУЛ
NKR_CK = int(CK) * float(CK_NKR) # Nкр
NKR_CK_d = int_r(NKR_CK) # ОКРУГЛЕНИЕ

NTR_CK = int(CK) * float(CK_NTR) # Nтр
NTR_CK_d = int_r(NTR_CK) # ОКРУГЛЕНИЕ

NTO_2_CK = int(CK_NTO) * int(CK) / int(CK_NTO_2) - int(CK_NKR) - int(NTR_CK) # Nто-2
NTO_2_CK_d = int_r(NTO_2_CK) # ОКРУГЛЕНИЕ

NTO_1_CK = int(CK_NTO) * int(CK) / int(CK_NTO_1) - int(NKR_CK) -  int(NTR_CK) - int(NTO_2_CK) # Nто-1
NTO_1_CK_d = int_r(NTO_1_CK) # ОКРУГЛЕНИЕ

NCTO_CK = int(CK) * int(CK_NCTO) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print ("Nкр"+ " = "+str(CK)+" * "+str(CK_NKR)+" = "+str(NKR_CK))
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ: "+ str(NKR_CK_d))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print ("Nтр"+ " = "+str(CK)+" * "+str(CK_NTR)+" = "+str(NTR_CK))
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ: "+ str(NTR_CK_d))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-2"+" = "+str(CK_NTO)+" * "+str(CK)+" / "+str(CK_NTO_2)+" - "+str(NKR_CK_d)+" - "+str(NTR_CK_d)+" = "+str(NTO_2_CK))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_CK = NTO_2_CK_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_CK))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nто-1"+" = "+str(CK_NTO)+" * "+str(CK)+" / "+str(CK_NTO_1)+" - "+str(NKR_CK_d)+" - "+str(NTR_CK_d)+" - "+str(NTO_2_CK)+" = "+str(NTO_1_CK)  )
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_CK = NTO_1_CK_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_CK))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-5
print("Nсто"+" = "+str(CK)+" * "+str(CK_NCTO)+" = "+str(NCTO_CK))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("УАЗ-469:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################



#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
UAZ_NKR_U = 35_000
UAZ_NKR_N = 140_000
UAZ_NTO_2_N = 12_800
UAZ_NTO_1_N = 3200
UAZ_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_UAZ = int (UAZ_NKR_U) * int (UAZ) / int (UAZ_NKR_N) # Nкр
NKR_UAZ_d = int_r(NKR_UAZ) # ОКРУГЛЕНИЕ

NTO_2_UAZ = int (UAZ_NKR_U) * int (UAZ) / int (UAZ_NTO_2_N) - NKR_UAZ_d # Nто-2
NTO_2_UAZ_d = int_r(NTO_2_UAZ) # ОКРУГЛЕНИЕ


NTO_1_UAZ = int (UAZ_NKR_U) * int (UAZ) / int (UAZ_NTO_1_N) - NKR_UAZ_d - NTO_2_UAZ_d  # Nто-1
NTO_1_UAZ_d = int_r(NTO_1_UAZ) # ОКРУГЛЕНИЕ

UAZ_N_CTO = int (UAZ_NCTO) * int (UAZ) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(UAZ_NKR_U)+" * "+str(UAZ)+" / "+str(UAZ_NKR_N)+" = "+str(NKR_UAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_UAZ = NKR_UAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_UAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nто-2"+" = "+str(UAZ_NKR_U)+" * "+str(UAZ)+" / "+str(UAZ_NTO_2_N)+" - "+str(NKR_UAZ)+" = "+str(NTO_2_UAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_UAZ = NTO_2_UAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_UAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-1"+" = "+str(UAZ_NKR_U)+" * "+str(UAZ)+" / "+str(UAZ_NTO_1_N)+" - "+str(NKR_UAZ)+" - "+str(NTO_2_UAZ)+" = "+str(NTO_1_UAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_UAZ = NTO_1_UAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_UAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nсто"+" = "+str(UAZ_NCTO)+" * "+str(UAZ)+" = "+str(UAZ_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("КАМАЗ-5320:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################

#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
KAMAZ_NKR_U = 40_000
KAMAZ_NKR_N = 250_000
KAMAZ_NTO_2_N = 7200
KAMAZ_NTO_1_N = 2400
KAMAZ_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_KAMAZ = int (KAMAZ_NKR_U) * int (KAMAZ) / int (KAMAZ_NKR_N) # Nкр
NKR_KAMAZ_d = int_r(NKR_KAMAZ) # ОКРУГЛЕНИЕ

NTO_2_KAMAZ = int (KAMAZ_NKR_U) * int (KAMAZ) / int (KAMAZ_NTO_2_N) - NKR_KAMAZ_d # Nто-2
NTO_2_KAMAZ_d = int_r(NTO_2_KAMAZ) # ОКРУГЛЕНИЕ


NTO_1_KAMAZ = int (KAMAZ_NKR_U) * int (KAMAZ) / int (KAMAZ_NTO_1_N) - NKR_KAMAZ_d - NTO_2_KAMAZ_d  # Nто-1
NTO_1_KAMAZ_d = int_r(NTO_1_KAMAZ) # ОКРУГЛЕНИЕ

KAMAZ_N_CTO = int (KAMAZ_NCTO) * int (KAMAZ) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(KAMAZ_NKR_U)+" * "+str(KAMAZ)+" / "+str(KAMAZ_NKR_N)+" = "+str(NKR_KAMAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_KAMAZ = NKR_KAMAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_KAMAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nто-2"+" = "+str(KAMAZ_NKR_U)+" * "+str(KAMAZ)+" / "+str(KAMAZ_NTO_2_N)+" - "+str(NKR_KAMAZ)+" = "+str(NTO_2_KAMAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_KAMAZ = NTO_2_KAMAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_KAMAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-1"+" = "+str(KAMAZ_NKR_U)+" * "+str(KAMAZ)+" / "+str(KAMAZ_NTO_1_N)+" - "+str(NKR_KAMAZ)+" - "+str(NTO_2_KAMAZ)+" = "+str(NTO_1_KAMAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_KAMAZ = NTO_1_KAMAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_KAMAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nсто"+" = "+str(KAMAZ_NCTO)+" * "+str(KAMAZ)+" = "+str(KAMAZ_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ГАЗ-53 А:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
GAZ_NKR_U = 36_000
GAZ_NKR_N = 160_000
GAZ_NTO_2_N = 10_000
GAZ_NTO_1_N = 2500
GAZ_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_GAZ = int (GAZ_NKR_U) * int (GAZ) / int (GAZ_NKR_N) # Nкр
NKR_GAZ_d = int_r(NKR_GAZ) # ОКРУГЛЕНИЕ

NTO_2_GAZ = int (GAZ_NKR_U) * int (GAZ) / int (GAZ_NTO_2_N) - NKR_GAZ_d # Nто-2
NTO_2_GAZ_d = int_r(NTO_2_GAZ) # ОКРУГЛЕНИЕ


NTO_1_GAZ = int (GAZ_NKR_U) * int (GAZ) / int (GAZ_NTO_1_N) - NKR_GAZ_d - NTO_2_GAZ_d  # Nто-1
NTO_1_GAZ_d = int_r(NTO_1_GAZ) # ОКРУГЛЕНИЕ

GAZ_N_CTO = int (GAZ_NCTO) * int (GAZ) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(GAZ_NKR_U)+" * "+str(GAZ)+" / "+str(GAZ_NKR_N)+" = "+str(NKR_GAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_GAZ = NKR_GAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_GAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nто-2"+" = "+str(GAZ_NKR_U)+" * "+str(GAZ)+" / "+str(GAZ_NTO_2_N)+" - "+str(NKR_GAZ)+" = "+str(NTO_2_GAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_GAZ = NTO_2_GAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_GAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-1"+" = "+str(GAZ_NKR_U)+" * "+str(GAZ)+" / "+str(GAZ_NTO_1_N)+" - "+str(NKR_GAZ)+" - "+str(NTO_2_GAZ)+" = "+str(NTO_1_GAZ))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_GAZ = NTO_1_GAZ_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_GAZ))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nсто"+" = "+str(GAZ_NCTO)+" * "+str(GAZ)+" = "+str(GAZ_N_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ЗИЛ-130:")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


#___________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ФУНКЦИИ ДЛЯ ОКРУГЛЕНИЯ ЗНАЧЕНИЙ
def int_r(num):
	num = int(num + (0.5 if num > 0 else -0.5))
	return num

#____________________________________________________________________________________________________________
# ОБЪЯВЛЕНИЕ ПОСТОЯННЫХ ЗНАЧЕНИЙ
ZIL_NKR_U = 11_000
ZIL_NKR_N = 230_000
ZIL_NTO_2_N = 10_000
ZIL_NTO_1_N = 2500
ZIL_NCTO = 2

#_____________________________________________________________________________________________________________
# ВЫПОЛНЕНИЕ ФОРМУЛ
NKR_ZIL = int (ZIL_NKR_U) * int (ZIL) / int (ZIL_NKR_N) # Nкр
NKR_ZIL_d = int_r(NKR_ZIL) # ОКРУГЛЕНИЕ

NTO_2_ZIL = int (ZIL_NKR_U) * int (ZIL) / int (ZIL_NTO_2_N) - NKR_ZIL_d # Nто-2
NTO_2_ZIL_d = int_r(NTO_2_ZIL) # ОКРУГЛЕНИЕ


NTO_1_ZIL = int (ZIL_NKR_U) * int (ZIL) / int (ZIL_NTO_1_N) - NKR_ZIL_d - NTO_2_ZIL_d  # Nто-1
NTO_1_ZIL_d = int_r(NTO_1_ZIL) # ОКРУГЛЕНИЕ

ZIL_N_CTO = int (ZIL_NCTO) * int (ZIL) # Nсто

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-1
print("Nкр"+" = "+str(ZIL_NKR_U)+" * "+str(ZIL)+" / "+str(ZIL_NKR_N)+" = "+str(NKR_ZIL))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NKR_ZIL = NKR_ZIL_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NKR_ZIL))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-2
print("Nто-2"+" = "+str(ZIL_NKR_U)+" * "+str(ZIL)+" / "+str(ZIL_NTO_2_N)+" - "+str(NKR_ZIL)+" = "+str(NTO_2_ZIL))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_2_ZIL = NTO_2_ZIL_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_2_ZIL))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-3
print("Nто-1"+" = "+str(ZIL_NKR_U)+" * "+str(ZIL)+" / "+str(ZIL_NTO_1_N)+" - "+str(NKR_ZIL)+" - "+str(NTO_2_ZIL)+" = "+str(NTO_1_ZIL))
# ПРИРАВНИВАНИЕ ЗНАЧЕНИЯ
NTO_1_ZIL = NTO_1_ZIL_d
# ВЫВОД ПРИНИМАЕМОГО ОКРУГЛЕННОГО ЗНАЧЕНИЯ
print ("ПРИНИМАЮ "+ str(NTO_1_ZIL))

#______________________________________________________________________________________________________________
# ВЫВОД КОНКАТЕНАЦИИ В КОНСОЛЬ (СКЛЕЙКА) ФОРМУЛА-4
print("Nсто"+" = "+str(ZIL_NCTO)+" * "+str(ZIL)+" = "+str(ZIL_N_CTO))

##############################################################################
##############################################################################

##############################################################################
##############################################################################

print ()
print (("_") * 75)
print ("РАСЧЕТ ФОРМУЛ НА ТРУДОЕМКОСТЬ:")
print (("_") * 75)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("К-700:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


K_T_KR = 410
K_T_TR = 297
K_T_TO_3 = 43.2
K_T_TO_2 = 10.6
K_T_TO_1 = 2.5
K_T_CTO = 29.3

##############################################################################

T_KR_K = float(NKR_K_700_d) * int(K_T_KR)
T_TR_K = float(NTR_K_700_d) * int(K_T_TR)
T_TO_3_K = float(NTO_3_K_700_d) * int(K_T_TO_3)
T_TO_2_K = float(NTO_2_K_700_d) * int(K_T_TO_2)
T_TO_1_K = float(NTO_1_K_700_d) * int(K_T_TO_1)
T_CTO_K = float(K_700_N_CTO) * int(K_T_CTO)

#################################################################

print("Tкр"+" = "+str(NKR_K_700_d)+" * "+str(K_T_KR)+" = "+str(T_KR_K))
print("Tтр"+" = "+str(NTR_K_700_d)+" * "+str(K_T_TR)+" = "+str(T_TR_K))
print("Tто-3"+" = "+str(NTO_3_K_700_d)+" * "+str(K_T_TO_3)+" = "+str(T_TO_3_K))
print("Tто-2"+" = "+str(NTO_2_K_700_d)+" * "+str(K_T_TO_2)+" = "+str(T_TO_2_K))
print("Tто-1"+" = "+str(NTO_1_K_700_d)+" * "+str(K_T_TO_1)+" = "+str(T_TO_1_K))
print("Tсто"+" = "+str(K_700_N_CTO)+" * "+str(K_T_CTO)+" = "+str(T_CTO_K))

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("К-701:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


K1_T_KR = 451
K1_T_TR = 297
K1_T_TO_3 = 25.2
K1_T_TO_2 = 11.6
K1_T_TO_1 = 2.2
K1_T_CTO = 182.3

##############################################################################



#=================================
#РАСЧЕТ Т

T_KR_K1 = float(NKR_K_701_d) * int(K1_T_KR)
T_TR_K1 = float(NTR_K_701_d) * int(K1_T_TR)
T_TO_3_K1 = float(NTO_3_K_701_d) * int(K1_T_TO_3)
T_TO_2_K1 = float(NTO_2_K_701_d) * int(K1_T_TO_2)
T_TO_1_K1 = float(NTO_1_K_701_d) * int(K1_T_TO_1)
T_CTO_K1 = float(K_701_N_CTO) * int(K1_T_CTO)

#################################################################




print("Tкр"+" = "+str(NKR_DT_d)+" * "+str(K1_T_KR)+" = "+str(T_KR_K1))
print("Tтр"+" = "+str(NTR_K_701_d)+" * "+str(K1_T_TR)+" = "+str(T_TR_K1))
print("Tто-3"+" = "+str(NTO_3_K_701_d)+" * "+str(K1_T_TO_3)+" = "+str(T_TO_3_K1))
print("Tто-2"+" = "+str(NTO_2_K_701_d)+" * "+str(K1_T_TO_2)+" = "+str(T_TO_2_K1))
print("Tто-1"+" = "+str(NTO_1_K_701_d)+" * "+str(K1_T_TO_1)+" = "+str(T_TO_1_K1))
print("Tсто"+" = "+str(K_701_N_CTO)+" * "+str(K1_T_CTO)+" = "+str(T_CTO_K1))


##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("ДТ-75 МВ:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################



T_KR_DT = 229
T_TR_DT = 268
T_TO_3_DT = 21.4
T_TO_2_DT = 6.4
T_TO_1_DT = 2.7
T_CTO_DT = 17.1

##############################################################################

DT_T_KR = float(NKR_DT_d) * int(T_KR_DT)
DT_T_TR = float(NTR_DT_d) * int(T_TR_DT)
DT_T_TO_3 = float(NTO_3_DT_d) * int(T_TO_3_DT)
DT_T_TO_2 = float(NTO_2_DT_d) * int(T_TO_2_DT)
DT_T_TO_1 = float(NTO_1_DT_d) * int(T_TO_1_DT)
DT_T_CTO = float(DT_N_CTO) * int(T_CTO_DT)

#################################################################

print("Tкр"+" = "+str(NKR_DT_d)+" * "+str(T_KR_DT)+" = "+str(DT_T_KR))
print("Tтр"+" = "+str(NTR_DT_d)+" * "+str(T_TR_DT)+" = "+str(DT_T_TR))
print("Tто-3"+" = "+str(NTO_3_DT_d)+" * "+str(T_TO_3_DT)+" = "+str(DT_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_DT_d)+" * "+str(T_TO_2_DT)+" = "+str(DT_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_DT_d)+" * "+str(T_TO_1_DT)+" = "+str(DT_T_TO_1))
print("Tсто"+" = "+str(DT_N_CTO)+" * "+str(T_CTO_DT)+" = "+str(DT_T_CTO))



##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("МТЗ-82:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


T_KR_MTZ2 = 193
T_TR_MTZ2 = 163
T_TO_3_MTZ2 = 19.8
T_TO_2_MTZ2 = 6.9
T_TO_1_MTZ2 = 2.7
T_CTO_MTZ2 = 3.5

##############################################################################

MTZ2_T_KR = float(NKR_MTZ2_d) * int(T_KR_MTZ2)
MTZ2_T_TR = float(NTR_MTZ2_d) * int(T_TR_MTZ2)
MTZ2_T_TO_3 = float(NTO_3_MTZ2_d) * int(T_TO_3_MTZ2)
MTZ2_T_TO_2 = float(NTO_2_MTZ2_d) * int(T_TO_2_MTZ2)
MTZ2_T_TO_1 = float(NTO_1_MTZ2_d) * int(T_TO_1_MTZ2)
MTZ2_T_CTO = float(MTZ2_N_CTO) * int(T_CTO_MTZ2)

#################################################################

print("Tкр"+" = "+str(NKR_MTZ2_d)+" * "+str(T_KR_MTZ2)+" = "+str(MTZ2_T_KR))
print("Tтр"+" = "+str(NTR_MTZ2_d)+" * "+str(T_TR_MTZ2)+" = "+str(MTZ2_T_TR))
print("Tто-3"+" = "+str(NTO_3_MTZ2_d)+" * "+str(T_TO_3_MTZ2)+" = "+str(MTZ2_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_MTZ2_d)+" * "+str(T_TO_2_MTZ2)+" = "+str(MTZ2_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_MTZ2_d)+" * "+str(T_TO_1_MTZ2)+" = "+str(MTZ2_T_TO_1))
print("Tсто"+" = "+str(MTZ2_N_CTO)+" * "+str(T_CTO_MTZ2)+" = "+str(MTZ2_T_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("МТЗ-80:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


T_KR_MZT = 229
T_TR_MZT = 268
T_TO_3_MZT = 19.8
T_TO_2_MZT = 6.9
T_TO_1_MZT = 2.7
T_CTO_MZT = 3.5

##############################################################################

MZT_T_KR = float(NKR_MZT_d) * int(T_KR_MZT)
MZT_T_TR = float(NTR_MZT_d) * int(T_TR_MZT)
MZT_T_TO_3 = float(NTO_3_MZT_d) * int(T_TO_3_MZT)
MZT_T_TO_2 = float(NTO_2_MZT_d) * int(T_TO_2_MZT)
MZT_T_TO_1 = float(NTO_1_MZT_d) * int(T_TO_1_MZT)
MZT_T_CTO = float(MZT_N_CTO) * int(T_CTO_MZT)

#################################################################

print("Tкр"+" = "+str(NKR_MZT_d)+" * "+str(T_KR_MZT)+" = "+str(MZT_T_KR))
print("Tтр"+" = "+str(NTR_MZT_d)+" * "+str(T_TR_MZT)+" = "+str(MZT_T_TR))
print("Tто-3"+" = "+str(NTO_3_MZT_d)+" * "+str(T_TO_3_MZT)+" = "+str(MZT_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_MZT_d)+" * "+str(T_TO_2_MZT)+" = "+str(MZT_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_MZT_d)+" * "+str(T_TO_1_MZT)+" = "+str(MZT_T_TO_1))
print("Tсто"+" = "+str(MZT_N_CTO)+" * "+str(T_CTO_MZT)+" = "+str(MZT_T_CTO))


##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("T-40:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


T_KR_T40 = 156
T_TR_T40 = 127
T_TO_3_T40 = 18
T_TO_2_T40 = 6.8
T_TO_1_T40 = 2
T_CTO_T40 = 19.8

##############################################################################

T40_T_KR = float(NKR_T40_d) * int(T_KR_T40)
T40_T_TR = float(NTR_T40_d) * int(T_TR_T40)
T40_T_TO_3 = float(NTO_3_T40_d) * int(T_TO_3_T40)
T40_T_TO_2 = float(NTO_2_T40_d) * int(T_TO_2_T40)
T40_T_TO_1 = float(NTO_1_T40_d) * int(T_TO_1_T40)
T40_T_CTO = float(T40_N_CTO) * int(T_CTO_T40)

#################################################################

print("Tкр"+" = "+str(NKR_T40_d)+" * "+str(T_KR_T40)+" = "+str(T40_T_KR))
print("Tтр"+" = "+str(NTR_T40_d)+" * "+str(T_TR_T40)+" = "+str(T40_T_TR))
print("Tто-3"+" = "+str(NTO_3_T40_d)+" * "+str(T_TO_3_T40)+" = "+str(T40_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_T40_d)+" * "+str(T_TO_2_T40)+" = "+str(T40_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_T40_d)+" * "+str(T_TO_1_T40)+" = "+str(T40_T_TO_1))
print("Tсто"+" = "+str(T40_N_CTO)+" * "+str(T_CTO_T40)+" = "+str(T40_T_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("T-40:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


T_KR_T40 = 156
T_TR_T40 = 127
T_TO_3_T40 = 18
T_TO_2_T40 = 6.8
T_TO_1_T40 = 2
T_CTO_T40 = 19.8

##############################################################################

T40_T_KR = float(NKR_T40_d) * int(T_KR_T40)
T40_T_TR = float(NTR_T40_d) * int(T_TR_T40)
T40_T_TO_3 = float(NTO_3_T40_d) * int(T_TO_3_T40)
T40_T_TO_2 = float(NTO_2_T40_d) * int(T_TO_2_T40)
T40_T_TO_1 = float(NTO_1_T40_d) * int(T_TO_1_T40)
T40_T_CTO = float(T40_N_CTO) * int(T_CTO_T40)

#################################################################

print("Tкр"+" = "+str(NKR_T40_d)+" * "+str(T_KR_T40)+" = "+str(T40_T_KR))
print("Tтр"+" = "+str(NTR_T40_d)+" * "+str(T_TR_T40)+" = "+str(T40_T_TR))
print("Tто-3"+" = "+str(NTO_3_T40_d)+" * "+str(T_TO_3_T40)+" = "+str(T40_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_T40_d)+" * "+str(T_TO_2_T40)+" = "+str(T40_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_T40_d)+" * "+str(T_TO_1_T40)+" = "+str(T40_T_TO_1))
print("Tсто"+" = "+str(T40_N_CTO)+" * "+str(T_CTO_T40)+" = "+str(T40_T_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("T-25:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


T_KR_T25 = 132
T_TR_T25 = 80
T_TO_3_T25 = 7.7
T_TO_2_T25 = 2.7
T_TO_1_T25 = 0.9
T_CTO_T25 = 1.8

##############################################################################

T25_T_KR = float(NKR_T25_d) * int(T_KR_T25)
T25_T_TR = float(NTR_T25_d) * int(T_TR_T25)
T25_T_TO_3 = float(NTO_3_T25_d) * int(T_TO_3_T25)
T25_T_TO_2 = float(NTO_2_T25_d) * int(T_TO_2_T25)
T25_T_TO_1 = float(NTO_1_T25_d) * int(T_TO_1_T25)
T25_T_CTO = float(T25_N_CTO) * int(T_CTO_T25)

#################################################################

print("Tкр"+" = "+str(NKR_T25_d)+" * "+str(T_KR_T25)+" = "+str(T25_T_KR))
print("Tтр"+" = "+str(NTR_T25_d)+" * "+str(T_TR_T25)+" = "+str(T25_T_TR))
print("Tто-3"+" = "+str(NTO_3_T25_d)+" * "+str(T_TO_3_T25)+" = "+str(T25_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_T25_d)+" * "+str(T_TO_2_T25)+" = "+str(T25_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_T25_d)+" * "+str(T_TO_1_T25)+" = "+str(T25_T_TO_1))
print("Tсто"+" = "+str(T25_N_CTO)+" * "+str(T_CTO_T25)+" = "+str(T25_T_CTO))

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("T-16:")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


T_KR_T16 = 114
T_TR_T16 = 80
T_TO_3_T16 = 7.7
T_TO_2_T16 = 2.7
T_TO_1_T16 = 0.9
T_CTO_T16 = 1.8

##############################################################################

T16_T_KR = float(NKR_T16_d) * int(T_KR_T16)
T16_T_TR = float(NTR_T16_d) * int(T_TR_T16)
T16_T_TO_3 = float(NTO_3_T16_d) * int(T_TO_3_T16)
T16_T_TO_2 = float(NTO_2_T16_d) * int(T_TO_2_T16)
T16_T_TO_1 = float(NTO_1_T16_d) * int(T_TO_1_T16)
T16_T_CTO = float(T16_N_CTO) * int(T_CTO_T16)

#################################################################

print("Tкр"+" = "+str(NKR_T16_d)+" * "+str(T_KR_T16)+" = "+str(T16_T_KR))
print("Tтр"+" = "+str(NTR_T16_d)+" * "+str(T_TR_T16)+" = "+str(T16_T_TR))
print("Tто-3"+" = "+str(NTO_3_T16_d)+" * "+str(T_TO_3_T16)+" = "+str(T16_T_TO_3))
print("Tто-2"+" = "+str(NTO_2_T16_d)+" * "+str(T_TO_2_T16)+" = "+str(T16_T_TO_2))
print("Tто-1"+" = "+str(NTO_1_T16_d)+" * "+str(T_TO_1_T16)+" = "+str(T16_T_TO_1))
print("Tсто"+" = "+str(T16_N_CTO)+" * "+str(T_CTO_T16)+" = "+str(T16_T_CTO))


##############################################################################
##############################################################################
##############################################################################
##############################################################################

print()
print("С\Х МАШИНЫ: ")


print ()
print (("-") * 75)
print ("ККУ-2А")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################

T_TR_KKU = 69
T_CTO_KKU = 3.4

##############################################################################

KKU_T_TR = float(KKU_NTR_d) * int(T_TR_KKU)
KKU_T_CTO = float(KKU_NCTO) * int(T_CTO_KKU)

#################################################################

print("Tтр"+" = "+str(KKU_NTR_d)+" * "+str(T_TR_KKU)+" = "+str(KKU_T_TR))
print("Tсто"+" = "+str(KKU_NCTO)+" * "+str(T_CTO_KKU)+" = "+str(KKU_T_CTO))



##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ПЛН-4-35")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################

T_TR_PLN = 17
T_CTO_PLN = 3.4

##############################################################################

PLN_T_TR = float(PLN_NTR_d) * int(T_TR_PLN)
PLN_T_CTO = float(PLN_NCTO) * int(T_CTO_PLN)

#################################################################

print("Tтр"+" = "+str(PLN_NTR_d)+" * "+str(T_TR_PLN)+" = "+str(PLN_T_TR))
print("Tсто"+" = "+str(PLN_NCTO)+" * "+str(T_CTO_PLN)+" = "+str(PLN_T_CTO))



##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("БДТ-3")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################

T_TR_BDT = 29
T_CTO_BDT = 3.4

##############################################################################

BDT_T_TR = float(BDT_NTR_d) * int(T_TR_BDT)
BDT_T_CTO = float(BDT_NCTO) * int(T_CTO_BDT)

#################################################################

print("Tтр"+" = "+str(BDT_NTR_d)+" * "+str(T_TR_BDT)+" = "+str(BDT_T_TR))
print("Tсто"+" = "+str(BDT_NCTO)+" * "+str(T_CTO_BDT)+" = "+str(BDT_T_CTO))


##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("СЗ-3-6")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################

T_TR_SZ = 29
T_CTO_SZ = 3.4

##############################################################################

SZ_T_TR = float(SZ_NTR_d) * int(T_TR_SZ)
SZ_T_CTO = float(SZ_NCTO) * int(T_CTO_SZ)

#################################################################

print("Tтр"+" = "+str(SZ_NTR_d)+" * "+str(T_TR_SZ)+" = "+str(SZ_T_TR))
print("Tсто"+" = "+str(SZ_NCTO)+" * "+str(T_CTO_SZ)+" = "+str(SZ_T_CTO))


##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("СK-5")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


CK_T_KR = 330
CK_T_TR = 150
CK_T_TO_2 = 6.6
CK_T_TO_1 = 5.1
CK_T_CTO = 15

##############################################################################

T_KR_CK = float(NKR_CK_d) * int(CK_T_KR)
T_TR_CK = float(NTR_CK_d) * int(CK_T_TR)
T_TO_2_CK = float(NTO_2_CK_d) * int(CK_T_TO_2)
T_TO_1_CK = float(NTO_1_CK_d) * int(CK_T_TO_1)
T_CTO_CK = float(CK_NCTO) * int(CK_T_CTO)

#################################################################

print("Tкр"+" = "+str(NKR_CK_d)+" * "+str(CK_T_KR)+" = "+str(T_KR_CK))
print("Tтр"+" = "+str(NTR_CK_d)+" * "+str(CK_T_TR)+" = "+str(T_TR_CK))
print("Tто-2"+" = "+str(NTO_2_CK_d)+" * "+str(CK_T_TO_2)+" = "+str(T_TO_2_CK))
print("Tто-1"+" = "+str(NTO_1_CK_d)+" * "+str(CK_T_TO_1)+" = "+str(T_TO_1_CK))
print("Tсто"+" = "+str(CK_NCTO)+" * "+str(CK_T_CTO)+" = "+str(T_CTO_CK))

##############################################################################
##############################################################################
##############################################################################
##############################################################################


print ()
print (("-") * 75)
print ("UAZ")
print (("_") * 50)
print ()


##############################################################################
##############################################################################
##############################################################################
##############################################################################


UAZ_T_KR = 280
UAZ_T_TO_2 = 11.1
UAZ_T_TO_1 = 2.2
UAZ_T_CTO = 0.25 * 7.9
UAZ_T_TR_U1 = 35000
UAZ_T_TR_D = 1000
UAZ_T_TR_Z = 10.3

T_KR_UAZ = float(NKR_UAZ_d) * int(UAZ_T_KR)
T_TR_UAZ = float(UAZ_T_TR_U1) * int(UAZ) / int (UAZ_T_TR_D) * UAZ_T_TR_Z
T_TO_2_UAZ = float(NTO_2_UAZ_d) * int(UAZ_T_TO_2)
T_TO_1_UAZ = float(NTO_1_UAZ_d) * int(UAZ_T_TO_1)
T_CTO_UAZ = float(UAZ_NCTO) * int(UAZ_T_CTO)

print("Tкр"+" = "+str(NKR_UAZ_d)+" * "+str(UAZ_T_KR)+" = "+str(T_KR_UAZ))
print("Tтр"+" = "+str(UAZ_T_TR_U1)+" * "+str(UAZ)+" / "+str(UAZ_T_TR_D)+" = "+str(T_TR_UAZ))
print("Tто-2"+" = "+str(NTO_2_UAZ_d)+" * "+str(UAZ_T_TO_2)+" = "+str(T_TO_2_UAZ))
print("Tто-1"+" = "+str(NTO_1_UAZ_d)+" * "+str(UAZ_T_TO_1)+" = "+str(T_TO_1_UAZ))
print("Tсто"+" = "+str(UAZ_NCTO)+" * "+str(UAZ_T_CTO)+" = "+str(T_CTO_UAZ))



##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("KAMAZ")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


KAMAZ_T_KR = 380
KAMAZ_T_TO_2 = 21.5
KAMAZ_T_TO_1 = 4.4
KAMAZ_T_CTO = 0.25 * 10.2
KAMAZ_T_TR_U1 = 40000
KAMAZ_T_TR_D = 1000
KAMAZ_T_TR_Z = 10.5

T_KR_KAMAZ = float(NKR_KAMAZ_d) * int(KAMAZ_T_KR)
T_TR_KAMAZ = float(KAMAZ_T_TR_U1) * int(KAMAZ) / int (KAMAZ_T_TR_D) * KAMAZ_T_TR_Z
T_TO_2_KAMAZ = float(NTO_2_KAMAZ_d) * int(KAMAZ_T_TO_2)
T_TO_1_KAMAZ = float(NTO_1_KAMAZ_d) * int(KAMAZ_T_TO_1)
T_CTO_KAMAZ = float(KAMAZ_NCTO) * int(KAMAZ_T_CTO)

print("Tкр"+" = "+str(NKR_KAMAZ_d)+" * "+str(KAMAZ_T_KR)+" = "+str(T_KR_KAMAZ))
print("Tтр"+" = "+str(KAMAZ_T_TR_U1)+" * "+str(KAMAZ)+" / "+str(KAMAZ_T_TR_D)+" = "+str(T_TR_KAMAZ))
print("Tто-2"+" = "+str(NTO_2_KAMAZ_d)+" * "+str(KAMAZ_T_TO_2)+" = "+str(T_TO_2_KAMAZ))
print("Tто-1"+" = "+str(NTO_1_KAMAZ_d)+" * "+str(KAMAZ_T_TO_1)+" = "+str(T_TO_1_KAMAZ))
print("Tсто"+" = "+str(KAMAZ_NCTO)+" * "+str(KAMAZ_T_CTO)+" = "+str(T_CTO_KAMAZ))



##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("GAZ")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


GAZ_T_KR = 249
GAZ_T_TO_2 = 11.8
GAZ_T_TO_1 = 2.9
GAZ_T_CTO = 0.25 * 4.6
GAZ_T_TR_U1 = 36000
GAZ_T_TR_D = 1000
GAZ_T_TR_Z = 6

T_KR_GAZ = float(NKR_GAZ_d) * int(GAZ_T_KR)
T_TR_GAZ = float(GAZ_T_TR_U1) * int(GAZ) / int (GAZ_T_TR_D) * GAZ_T_TR_Z
T_TO_2_GAZ = float(NTO_2_GAZ_d) * int(GAZ_T_TO_2)
T_TO_1_GAZ = float(NTO_1_GAZ_d) * int(GAZ_T_TO_1)
T_CTO_GAZ = float(GAZ_NCTO) * int(GAZ_T_CTO)

print("Tкр"+" = "+str(NKR_GAZ_d)+" * "+str(GAZ_T_KR)+" = "+str(T_KR_GAZ))
print("Tтр"+" = "+str(GAZ_T_TR_U1)+" * "+str(GAZ)+" / "+str(GAZ_T_TR_D)+" = "+str(T_TR_GAZ))
print("Tто-2"+" = "+str(NTO_2_GAZ_d)+" * "+str(GAZ_T_TO_2)+" = "+str(T_TO_2_GAZ))
print("Tто-1"+" = "+str(NTO_1_GAZ_d)+" * "+str(GAZ_T_TO_1)+" = "+str(T_TO_1_GAZ))
print("Tсто"+" = "+str(GAZ_NCTO)+" * "+str(GAZ_T_CTO)+" = "+str(T_CTO_GAZ))



##############################################################################
##############################################################################
##############################################################################
##############################################################################

print ()
print (("-") * 75)
print ("ZIL")
print (("_") * 50)
print ()

##############################################################################
##############################################################################
##############################################################################
##############################################################################


ZIL_T_KR = 302
ZIL_T_TO_2 = 14
ZIL_T_TO_1 = 3.5
ZIL_T_CTO = 0.25 * 5
ZIL_T_TR_U1 = 44000
ZIL_T_TR_D = 1000
ZIL_T_TR_Z = 6.3

T_KR_ZIL = float(NKR_ZIL_d) * int(ZIL_T_KR)
T_TR_ZIL = float(ZIL_T_TR_U1) * int(ZIL) / int (ZIL_T_TR_D) * ZIL_T_TR_Z
T_TO_2_ZIL = float(NTO_2_ZIL_d) * int(ZIL_T_TO_2)
T_TO_1_ZIL = float(NTO_1_ZIL_d) * int(ZIL_T_TO_1)
T_CTO_ZIL = float(ZIL_NCTO) * int(ZIL_T_CTO)

print("Tкр"+" = "+str(NKR_ZIL_d)+" * "+str(ZIL_T_KR)+" = "+str(T_KR_ZIL))
print("Tтр"+" = "+str(ZIL_T_TR_U1)+" * "+str(ZIL)+" / "+str(ZIL_T_TR_D)+" = "+str(T_TR_ZIL))
print("Tто-2"+" = "+str(NTO_2_ZIL_d)+" * "+str(ZIL_T_TO_2)+" = "+str(T_TO_2_ZIL))
print("Tто-1"+" = "+str(NTO_1_ZIL_d)+" * "+str(ZIL_T_TO_1)+" = "+str(T_TO_1_ZIL))
print("Tсто"+" = "+str(ZIL_NCTO)+" * "+str(ZIL_T_CTO)+" = "+str(T_CTO_ZIL))

##############################################################################
##############################################################################
##############################################################################
##############################################################################

##############################################################################
##############################################################################

##############################################################################
##############################################################################
print ()
print (("_") * 75)
print ("ТАБЛИЦА РЕМОНТОВ И ТО ТРАКТОРОВ:")
print (("_") * 75)
print ()



#TABLE

from prettytable import PrettyTable

th = ['МАРКА', 'КОЛ-ВО', 'КР', 'ТР', 'ТО-3', 'TO-2', 'TO-1', 'CTO']

td = ['К-700', K_700, NKR_K_700_d, NTR_K_700, NTO_3_K_700, NTO_2_K_700, NTO_1_K_700, K_700_N_CTO,
	  'К-701', K_701, NKR_K_701_d, NTR_K_701, NTO_3_K_701, NTO_2_K_701, NTO_1_K_701, K_701_N_CTO,
	  'ДТ-75 МВ', DT, NKR_DT_d, NTR_DT, NTO_3_DT, NTO_2_DT, NTO_1_DT, DT_N_CTO,
	  'МТЗ-82', MTZ2, NKR_MTZ2_d, NTR_MTZ2, NTO_3_MTZ2, NTO_2_MTZ2, NTO_1_MTZ2, MTZ2_N_CTO,
	  'МТЗ-80', MZT, NKR_MZT_d, NTR_MZT, NTO_3_MZT, NTO_2_MZT, NTO_1_MZT, MZT_N_CTO,
	  'Т-40', T40, NKR_T40_d, NTR_T40, NTO_3_T40, NTO_2_T40, NTO_1_T40, T40_N_CTO,
	  'Т-25', T25, NKR_T25_d, NTR_T25, NTO_3_T25, NTO_2_T25, NTO_1_T25, T25_N_CTO,
	  'Т-16', T16, NKR_T16_d, NTR_T16, NTO_3_T16, NTO_2_T16, NTO_1_T16, T16_N_CTO]

# Определяем твою шапку и данные.
#th = [...]
#td = [...]

columns = len(th) # Подсчитаем кол-во столбцов на будущее.

table = PrettyTable(th)  # Определяем таблицу.

# Cкопируем список td, на случай если он будет использоваться в коде дальше.
td_data = td[:]
# Входим в цикл который заполняет нашу таблицу.
# Цикл будет выполняться до тех пор пока у нас не кончатся данные
# для заполнения строк таблицы (список td_data).
while td_data:
	# Используя срез добавляем первые пять элементов в строку.
	# (columns = 5).
	table.add_row(td_data[:columns])
	# Используя срез переопределяем td_data так, чтобы он
	# больше не содержал первых 5 элементов.
	td_data = td_data[columns:]

print(table)  # Печатаем таблицу

##############################################################################
##############################################################################

##############################################################################
##############################################################################
print ()
print (("_") * 75)
print ("ТАБЛИЦА РЕМОНТОВ И ТО С\Х МАШИН:")
print (("_") * 75)
print ()


#TABLE

from prettytable import PrettyTable

th = ['МАРКА', 'КОЛ-ВО', 'КОЭФ.РЕМ.', 'КОЭФ.ПСТО', 'КОЛ-ВО ТР', 'КОЛ-ВО ПСТО']

td = ['ККУ-2 А', KKU, "0.8", "1", KKU_NTR_d, KKU_NCTO,
	  'ПЛН-4-35', PLN, "0.8", "2", PLN_NTR_d, PLN_NCTO,
	  'БДТ-3', BDT, '0.78', "2", BDT_NTR_d, BDT_NCTO,
	  'СЗ-3-6', SZ, "0.78", "2", SZ_NTR_d, SZ_NCTO,
	  'СК-5', CK, '-', "1", NTR_CK_d, NCTO_CK]

# Определяем твою шапку и данные.
#th = [...]
#td = [...]

columns = len(th) # Подсчитаем кол-во столбцов на будущее.

table = PrettyTable(th)  # Определяем таблицу.

# Cкопируем список td, на случай если он будет использоваться в коде дальше.
td_data = td[:]
# Входим в цикл который заполняет нашу таблицу.
# Цикл будет выполняться до тех пор пока у нас не кончатся данные
# для заполнения строк таблицы (список td_data).
while td_data:
	# Используя срез добавляем первые пять элементов в строку.
	# (columns = 5).
	table.add_row(td_data[:columns])
	# Используя срез переопределяем td_data так, чтобы он
	# больше не содержал первых 5 элементов.
	td_data = td_data[columns:]

print(table)  # Печатаем таблицу

####3############################################################################################
##print("Maximum of 4,12,43.3,19 and 100 is : ",end="")
##print(max() )




####################################################################
#                           K-700
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nК-700:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(K_700_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_700))
	file_object.write(' / ')
	file_object.write(str(K_700_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_K_700))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_K_700_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(K_700_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_700))
	file_object.write(' / ')
	file_object.write(str(K_700_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' = ')
	file_object.write(str(NTR_K_700))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_K_700_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(K_700_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_700))
	file_object.write(' / ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' - ')
	file_object.write(str(K_700_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_K_700_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_K_700))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_K_700_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(K_700_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_700))
	file_object.write(' / ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' - ')
	file_object.write(str(K_700_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_K_700_d))
	file_object.write(' - ')
	file_object.write(str(K_700_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_K_700))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_K_700_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(K_700_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_700))
	file_object.write(' / ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' - ')
	file_object.write(str(K_700_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_K_700_d))
	file_object.write(' - ')
	file_object.write(str(K_700_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(K_700_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_K_700))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_K_700_d))



################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(K_700_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_700))
	file_object.write(' = ')
	file_object.write(str(K_700_N_CTO))

####################################################################
#                           K-701
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nК-701:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(K_701_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_701))
	file_object.write(' / ')
	file_object.write(str(K_701_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_K_701))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_K_701_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(K_701_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_701))
	file_object.write(' / ')
	file_object.write(str(K_701_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' = ')
	file_object.write(str(NTR_K_701))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_K_701_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(K_701_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_701))
	file_object.write(' / ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' - ')
	file_object.write(str(K_701_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_K_701_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_K_701))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_K_701_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(K_701_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_701))
	file_object.write(' / ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' - ')
	file_object.write(str(K_701_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_K_701_d))
	file_object.write(' - ')
	file_object.write(str(K_701_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_K_701))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_K_701_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(K_701_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_701))
	file_object.write(' / ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' - ')
	file_object.write(str(K_701_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_K_701_d))
	file_object.write(' - ')
	file_object.write(str(K_701_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(K_701_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_K_701))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_K_701_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(K_701_NKR_U))
	file_object.write(' * ')
	file_object.write(str(K_701))
	file_object.write(' = ')
	file_object.write(str(K_701_N_CTO))



####################################################################
#                           DT-75
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nДТ-75 МВ:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(DT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(DT))
	file_object.write(' / ')
	file_object.write(str(DT_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_DT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_DT_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(DT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(DT))
	file_object.write(' / ')
	file_object.write(str(DT_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' = ')
	file_object.write(str(NTR_DT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_DT_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(DT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(DT))
	file_object.write(' / ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' - ')
	file_object.write(str(DT_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_DT_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_DT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_DT_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(DT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(DT))
	file_object.write(' / ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' - ')
	file_object.write(str(DT_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_DT_d))
	file_object.write(' - ')
	file_object.write(str(DT_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_DT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_DT_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(DT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(DT))
	file_object.write(' / ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' - ')
	file_object.write(str(DT_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_DT_d))
	file_object.write(' - ')
	file_object.write(str(DT_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(DT_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_DT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_DT_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(DT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(DT))
	file_object.write(' = ')
	file_object.write(str(DT_N_CTO))



####################################################################
#                           MTZ2
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nМТЗ-82:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(MTZ2_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MTZ2))
	file_object.write(' / ')
	file_object.write(str(MTZ2_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_MTZ2))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_MTZ2_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(MTZ2_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MTZ2))
	file_object.write(' / ')
	file_object.write(str(MTZ2_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' = ')
	file_object.write(str(NTR_MTZ2))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_MTZ2_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(MTZ2_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MTZ2))
	file_object.write(' / ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(MTZ2_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_MTZ2_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_MTZ2))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_MTZ2_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(MTZ2_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MTZ2))
	file_object.write(' / ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(MTZ2_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(MTZ2_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_MTZ2))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_MTZ2_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(MTZ2_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MTZ2))
	file_object.write(' / ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(MTZ2_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_MTZ2_d))
	file_object.write(' - ')
	file_object.write(str(MTZ2_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(MTZ2_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_MTZ2))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_MTZ2_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(MTZ2_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_N_CTO))


####################################################################
#                           MZT
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nМТЗ-80:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(MZT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MZT))
	file_object.write(' / ')
	file_object.write(str(MZT_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_MZT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_MZT_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(MZT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MZT))
	file_object.write(' / ')
	file_object.write(str(MZT_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' = ')
	file_object.write(str(NTR_MZT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_MZT_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(MZT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MZT))
	file_object.write(' / ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' - ')
	file_object.write(str(MZT_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_MZT_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_MZT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_MZT_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(MZT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MZT))
	file_object.write(' / ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' - ')
	file_object.write(str(MZT_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_MZT_d))
	file_object.write(' - ')
	file_object.write(str(MZT_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_MZT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_MZT_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(MZT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MZT))
	file_object.write(' / ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' - ')
	file_object.write(str(MZT_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_MZT_d))
	file_object.write(' - ')
	file_object.write(str(MZT_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(MZT_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_MZT))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_MZT_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(MZT_NKR_U))
	file_object.write(' * ')
	file_object.write(str(MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_N_CTO))



####################################################################
#                           T-40
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:

	file_object.write('\n')
	file_object.write('\nT40:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(T40_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T40))
	file_object.write(' / ')
	file_object.write(str(T40_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_T40))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_T40_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(T40_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T40))
	file_object.write(' / ')
	file_object.write(str(T40_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' = ')
	file_object.write(str(NTR_T40))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_T40_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(T40_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T40))
	file_object.write(' / ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' - ')
	file_object.write(str(T40_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T40_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_T40))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_T40_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(T40_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T40))
	file_object.write(' / ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' - ')
	file_object.write(str(T40_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T40_d))
	file_object.write(' - ')
	file_object.write(str(T40_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_T40))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_T40_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(T40_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T40))
	file_object.write(' / ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' - ')
	file_object.write(str(T40_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T40_d))
	file_object.write(' - ')
	file_object.write(str(T40_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(T40_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_T40))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_T40_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(T40_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T40))
	file_object.write(' = ')
	file_object.write(str(T40_N_CTO))


####################################################################
#                           T25
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nT-25:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(T25_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T25))
	file_object.write(' / ')
	file_object.write(str(T25_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_T25))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_T25_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(T25_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T25))
	file_object.write(' / ')
	file_object.write(str(T25_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' = ')
	file_object.write(str(NTR_T25))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_T25_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(T25_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T25))
	file_object.write(' / ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' - ')
	file_object.write(str(T25_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T25_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_T25))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_T25_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(T25_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T25))
	file_object.write(' / ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' - ')
	file_object.write(str(T25_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T25_d))
	file_object.write(' - ')
	file_object.write(str(T25_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_T25))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_T25_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(T25_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T25))
	file_object.write(' / ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' - ')
	file_object.write(str(T25_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T25_d))
	file_object.write(' - ')
	file_object.write(str(T25_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(T25_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_T25))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_T25_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(T25_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T25))
	file_object.write(' = ')
	file_object.write(str(T25_N_CTO))


####################################################################
#                           T16
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nT16:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(T16_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T16))
	file_object.write(' / ')
	file_object.write(str(T16_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_T16))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_T16_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(T16_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T16))
	file_object.write(' / ')
	file_object.write(str(T16_NTR_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' = ')
	file_object.write(str(NTR_T16))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_T16_d))

################################################    NTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-3')
	file_object.write(' = ')
	file_object.write(str(T16_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T16))
	file_object.write(' / ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' - ')
	file_object.write(str(T16_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T16_d))
	file_object.write(' = ')
	file_object.write(str(NTO_3_T16))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_3_T16_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(T16_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T16))
	file_object.write(' / ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' - ')
	file_object.write(str(T16_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T16_d))
	file_object.write(' - ')
	file_object.write(str(T16_NTO_2_N))
	file_object.write(' = ')
	file_object.write(str(NTO_2_T16))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_T16_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(T16_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T16))
	file_object.write(' / ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' - ')
	file_object.write(str(T16_NTO_3_N))
	file_object.write(' - ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_T16_d))
	file_object.write(' - ')
	file_object.write(str(T16_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(T16_NTO_1_N))
	file_object.write(' = ')
	file_object.write(str(NTO_1_T16))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_T16_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(T16_NKR_U))
	file_object.write(' * ')
	file_object.write(str(T16))
	file_object.write(' = ')
	file_object.write(str(T16_N_CTO))




####################################################################
#                           УАЗ-469
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nУАЗ-469:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(UAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(UAZ))
	file_object.write(' / ')
	file_object.write(str(UAZ_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_UAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_UAZ_d))


################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(UAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(UAZ))
	file_object.write(' / ')
	file_object.write(str(UAZ_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(NKR_UAZ_d))
	file_object.write(' = ')
	file_object.write(str(NTO_2_UAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_UAZ_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(UAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(UAZ))
	file_object.write(' / ')
	file_object.write(str(UAZ_NTO_1_N))
	file_object.write(' - ')
	file_object.write(str(NKR_UAZ_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_UAZ_d))
	file_object.write(' = ')
	file_object.write(str(NTO_1_UAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_UAZ_d))



################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(UAZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(UAZ))
	file_object.write(' = ')
	file_object.write(str(UAZ_N_CTO))


####################################################################
#                           КАМАЗ-5320
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nКАМАЗ-5320:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(KAMAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(KAMAZ))
	file_object.write(' / ')
	file_object.write(str(KAMAZ_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_KAMAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_KAMAZ_d))


################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(KAMAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(KAMAZ))
	file_object.write(' / ')
	file_object.write(str(KAMAZ_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(NKR_KAMAZ_d))
	file_object.write(' = ')
	file_object.write(str(NTO_2_KAMAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_KAMAZ_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(KAMAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(KAMAZ))
	file_object.write(' / ')
	file_object.write(str(KAMAZ_NTO_1_N))
	file_object.write(' - ')
	file_object.write(str(NKR_KAMAZ_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_KAMAZ_d))
	file_object.write(' = ')
	file_object.write(str(NTO_1_KAMAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_KAMAZ_d))



################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(KAMAZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(KAMAZ))
	file_object.write(' = ')
	file_object.write(str(KAMAZ_N_CTO))


####################################################################
#                           ГАЗ-53
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nГАЗ-53:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(GAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(GAZ))
	file_object.write(' / ')
	file_object.write(str(GAZ_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_GAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_GAZ_d))


################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(GAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(GAZ))
	file_object.write(' / ')
	file_object.write(str(GAZ_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(NKR_GAZ_d))
	file_object.write(' = ')
	file_object.write(str(NTO_2_GAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_GAZ_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(GAZ_NKR_U))
	file_object.write(' * ')
	file_object.write(str(GAZ))
	file_object.write(' / ')
	file_object.write(str(GAZ_NTO_1_N))
	file_object.write(' - ')
	file_object.write(str(NKR_GAZ_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_GAZ_d))
	file_object.write(' = ')
	file_object.write(str(NTO_1_GAZ))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_GAZ_d))



################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(GAZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(GAZ))
	file_object.write(' = ')
	file_object.write(str(GAZ_N_CTO))



####################################################################
#                           ЗИЛ-130
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nЗИЛ-130:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(ZIL_NKR_U))
	file_object.write(' * ')
	file_object.write(str(ZIL))
	file_object.write(' / ')
	file_object.write(str(ZIL_NKR_N))
	file_object.write(' = ')
	file_object.write(str(NKR_ZIL))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_ZIL_d))


################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(ZIL_NKR_U))
	file_object.write(' * ')
	file_object.write(str(ZIL))
	file_object.write(' / ')
	file_object.write(str(ZIL_NTO_2_N))
	file_object.write(' - ')
	file_object.write(str(NKR_ZIL_d))
	file_object.write(' = ')
	file_object.write(str(NTO_2_ZIL))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_ZIL_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(ZIL_NKR_U))
	file_object.write(' * ')
	file_object.write(str(ZIL))
	file_object.write(' / ')
	file_object.write(str(ZIL_NTO_1_N))
	file_object.write(' - ')
	file_object.write(str(NKR_ZIL_d))
	file_object.write(' - ')
	file_object.write(str(NTO_2_ZIL_d))
	file_object.write(' = ')
	file_object.write(str(NTO_1_ZIL))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_ZIL_d))



################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(ZIL_NCTO))
	file_object.write(' * ')
	file_object.write(str(ZIL))
	file_object.write(' = ')
	file_object.write(str(ZIL_N_CTO))




####################################################################
#                           CK-5
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nCK-5:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(CK))
	file_object.write(' * ')
	file_object.write(str(CK_NKR))
	file_object.write(' = ')
	file_object.write(str(NKR_CK))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NKR_CK_d))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(CK))
	file_object.write(' * ')
	file_object.write(str(CK_NTR))
	file_object.write(' = ')
	file_object.write(str(NTR_CK))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTR_CK_d))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(CK_NTO))
	file_object.write(' * ')
	file_object.write(str(CK))
	file_object.write(' / ')
	file_object.write(str(CK_NTO_2))
	file_object.write(' - ')
	file_object.write(str(CK_NKR))
	file_object.write(' - ')
	file_object.write(str(NTR_CK))
	file_object.write(' = ')
	file_object.write(str(NTO_2_CK))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_2_CK_d))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(CK_NTO))
	file_object.write(' * ')
	file_object.write(str(CK))
	file_object.write(' / ')
	file_object.write(str(CK_NTO_1))
	file_object.write(' - ')
	file_object.write(str(NKR_CK))
	file_object.write(' - ')
	file_object.write(str(NTR_CK))
	file_object.write(' - ')
	file_object.write(str(NTO_2_CK))
	file_object.write(' = ')
	file_object.write(str(NTO_1_CK))
	file_object.write('\nПринимаю = ')
	file_object.write(str(NTO_1_CK_d))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(CK))
	file_object.write(' * ')
	file_object.write(str(CK_NCTO))
	file_object.write(' = ')
	file_object.write(str(NCTO_CK))



####################################################################
#                           PLN-4-35
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nПЛН-4-35:')

################################################    NTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(PLN))
	file_object.write(' * ')
	file_object.write(str(NTR_PLN))
	file_object.write(' = ')
	file_object.write(str(PLN_NTR))

################################################    NCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(PLN))
	file_object.write(' * ')
	file_object.write(str(NCTO_PLN))
	file_object.write(' = ')
	file_object.write(str(PLN_NCTO))



####################################################################
#                           SZ-3-6
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nСЗ-3-6')

################################################    NTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(SZ))
	file_object.write(' * ')
	file_object.write(str(NTR_SZ))
	file_object.write(' = ')
	file_object.write(str(SZ_NTR))

################################################    NCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(SZ))
	file_object.write(' * ')
	file_object.write(str(NCTO_SZ))
	file_object.write(' = ')
	file_object.write(str(SZ_NCTO))



####################################################################
#                           KKU-2
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nККУ-2А')

################################################    NTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(KKU))
	file_object.write(' * ')
	file_object.write(str(NTR_KKU))
	file_object.write(' = ')
	file_object.write(str(KKU_NTR))

################################################    NCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(KKU))
	file_object.write(' * ')
	file_object.write(str(NCTO_KKU))
	file_object.write(' = ')
	file_object.write(str(KKU_NCTO))



####################################################################
#                           BDT-3
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nБДТ-3')

################################################    NTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(BDT))
	file_object.write(' * ')
	file_object.write(str(NTR_BDT))
	file_object.write(' = ')
	file_object.write(str(BDT_NTR))

################################################    NCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(BDT))
	file_object.write(' * ')
	file_object.write(str(NCTO_BDT))
	file_object.write(' = ')
	file_object.write(str(BDT_NCTO))





with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nРАСЧЕТ ТРУДОЕМКОСТИ:')


####################################################################
#                           K-700
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nК-700:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_K_700_d))
	file_object.write(' * ')
	file_object.write(str(K_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_K))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_K_700_d))
	file_object.write(' * ')
	file_object.write(str(K_T_TR))
	file_object.write(' = ')
	file_object.write(str(T_TR_K))
################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_K_700_d))
	file_object.write(' * ')
	file_object.write(str(K_T_TO_3))
	file_object.write(' = ')
	file_object.write(str(T_TO_3_K))
################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_K_700_d))
	file_object.write(' * ')
	file_object.write(str(K_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_K))
################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_K_700_d))
	file_object.write(' * ')
	file_object.write(str(K_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_K))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(K_700_N_CTO))
	file_object.write(' * ')
	file_object.write(str(K_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_K))

####################################################################
#                           K-701
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nК-701:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_K_701_d))
	file_object.write(' * ')
	file_object.write(str(K1_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_K1))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_K_701_d))
	file_object.write(' * ')
	file_object.write(str(K1_T_TR))
	file_object.write(' = ')
	file_object.write(str(T_TR_K1))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_K_701_d))
	file_object.write(' * ')
	file_object.write(str(K1_T_TO_3))
	file_object.write(' = ')
	file_object.write(str(T_TO_3_K1))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_K_701_d))
	file_object.write(' * ')
	file_object.write(str(K1_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_K1))
################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_K_701_d))
	file_object.write(' * ')
	file_object.write(str(K1_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_K1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(K_701_N_CTO))
	file_object.write(' * ')
	file_object.write(str(K1_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_K1))



####################################################################
#                           DT-75
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nДТ-75 МВ:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_DT_d))
	file_object.write(' * ')
	file_object.write(str(T_KR_DT))
	file_object.write(' = ')
	file_object.write(str(DT_T_KR))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_DT_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_DT))
	file_object.write(' = ')
	file_object.write(str(DT_T_TR))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_DT_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_3_DT))
	file_object.write(' = ')
	file_object.write(str(DT_T_TO_3))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_DT_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_2_DT))
	file_object.write(' = ')
	file_object.write(str(DT_T_TO_2))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_DT_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_1_DT))
	file_object.write(' = ')
	file_object.write(str(DT_T_TO_1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(DT_N_CTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_DT))
	file_object.write(' = ')
	file_object.write(str(DT_T_CTO))



####################################################################
#                           MTZ2
####################################################################

# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nМТЗ-82:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_MTZ2_d))
	file_object.write(' * ')
	file_object.write(str(T_KR_MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_T_KR))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_MTZ2_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_T_TR))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_MTZ2_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_3_MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_T_TO_3))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_MTZ2_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_2_MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_T_TO_2))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_MTZ2_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_1_MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_T_TO_1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(MTZ2_N_CTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_MTZ2))
	file_object.write(' = ')
	file_object.write(str(MTZ2_T_CTO))

####################################################################
#                           MZT
####################################################################

# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nМТЗ-80:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_MZT_d))
	file_object.write(' * ')
	file_object.write(str(T_KR_MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_T_KR))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_MZT_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_T_TR))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_MZT_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_3_MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_T_TO_3))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_MZT_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_2_MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_T_TO_2))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_MZT_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_1_MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_T_TO_1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(MZT_N_CTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_MZT))
	file_object.write(' = ')
	file_object.write(str(MZT_T_CTO))


####################################################################
#                           T-40
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nT-40:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_T40_d))
	file_object.write(' * ')
	file_object.write(str(T_KR_T40))
	file_object.write(' = ')
	file_object.write(str(T40_T_KR))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_T40_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_T40))
	file_object.write(' = ')
	file_object.write(str(T40_T_TR))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_T40_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_3_T40))
	file_object.write(' = ')
	file_object.write(str(T40_T_TO_3))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_T40_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_2_T40))
	file_object.write(' = ')
	file_object.write(str(T40_T_TO_2))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_T40_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_1_T40))
	file_object.write(' = ')
	file_object.write(str(T40_T_TO_1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(T40_N_CTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_T40))
	file_object.write(' = ')
	file_object.write(str(T40_T_CTO))

####################################################################
#                           T25
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nT-25:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_T25_d))
	file_object.write(' * ')
	file_object.write(str(T_KR_T25))
	file_object.write(' = ')
	file_object.write(str(T25_T_KR))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_T25_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_T25))
	file_object.write(' = ')
	file_object.write(str(T25_T_TR))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_T25_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_3_T25))
	file_object.write(' = ')
	file_object.write(str(T25_T_TO_3))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_T25_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_2_T25))
	file_object.write(' = ')
	file_object.write(str(T25_T_TO_2))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_T25_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_1_T25))
	file_object.write(' = ')
	file_object.write(str(T25_T_TO_1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(T25_N_CTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_T25))
	file_object.write(' = ')
	file_object.write(str(T25_T_CTO))

####################################################################
#                           T16
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nT-16:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_T16_d))
	file_object.write(' * ')
	file_object.write(str(T_KR_T16))
	file_object.write(' = ')
	file_object.write(str(T16_T_KR))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(NTR_T16_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_T16))
	file_object.write(' = ')
	file_object.write(str(T16_T_TR))

################################################    TTO-3
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-3')
	file_object.write(' = ')
	file_object.write(str(NTO_3_T16_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_3_T16))
	file_object.write(' = ')
	file_object.write(str(T16_T_TO_3))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_T16_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_2_T16))
	file_object.write(' = ')
	file_object.write(str(T16_T_TO_2))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_T16_d))
	file_object.write(' * ')
	file_object.write(str(T_TO_1_T16))
	file_object.write(' = ')
	file_object.write(str(T16_T_TO_1))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(T16_N_CTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_T16))
	file_object.write(' = ')
	file_object.write(str(T16_T_CTO))



####################################################################
#                           УАЗ-469
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nУАЗ-469:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_UAZ_d))
	file_object.write(' * ')
	file_object.write(str(UAZ_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_UAZ))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(UAZ_T_TR_U1))
	file_object.write(' * ')
	file_object.write(str(UAZ))
	file_object.write(' / ')
	file_object.write(str(UAZ_T_TR_D))
	file_object.write(' * ')
	file_object.write(str(UAZ_T_TR_Z))
	file_object.write(' = ')
	file_object.write(str(T_TR_UAZ))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_UAZ_d))
	file_object.write(' * ')
	file_object.write(str(UAZ_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_UAZ))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_UAZ_d))
	file_object.write(' * ')
	file_object.write(str(UAZ_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_UAZ))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(UAZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(UAZ_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_UAZ))



####################################################################
#                           КАМАЗ-5320
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nКАМАЗ-5320:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_KAMAZ_d))
	file_object.write(' * ')
	file_object.write(str(KAMAZ_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_KAMAZ))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(KAMAZ_T_TR_U1))
	file_object.write(' * ')
	file_object.write(str(KAMAZ))
	file_object.write(' / ')
	file_object.write(str(KAMAZ_T_TR_D))
	file_object.write(' * ')
	file_object.write(str(KAMAZ_T_TR_Z))
	file_object.write(' = ')
	file_object.write(str(T_TR_KAMAZ))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_KAMAZ_d))
	file_object.write(' * ')
	file_object.write(str(KAMAZ_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_KAMAZ))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_KAMAZ_d))
	file_object.write(' * ')
	file_object.write(str(KAMAZ_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_KAMAZ))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(KAMAZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(KAMAZ_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_KAMAZ))

####################################################################
#                           ГАЗ-53
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nГАЗ-53:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_GAZ_d))
	file_object.write(' * ')
	file_object.write(str(GAZ_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_GAZ))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(GAZ_T_TR_U1))
	file_object.write(' * ')
	file_object.write(str(GAZ))
	file_object.write(' / ')
	file_object.write(str(GAZ_T_TR_D))
	file_object.write(' * ')
	file_object.write(str(GAZ_T_TR_Z))
	file_object.write(' = ')
	file_object.write(str(T_TR_GAZ))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_GAZ_d))
	file_object.write(' * ')
	file_object.write(str(GAZ_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_GAZ))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_GAZ_d))
	file_object.write(' * ')
	file_object.write(str(GAZ_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_GAZ))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(GAZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(GAZ_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_GAZ))

####################################################################
#                           ЗИЛ-130
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nЗИЛ-130:')

################################################    TKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTкр')
	file_object.write(' = ')
	file_object.write(str(NKR_ZIL_d))
	file_object.write(' * ')
	file_object.write(str(ZIL_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_ZIL))

################################################   TTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(ZIL_T_TR_U1))
	file_object.write(' * ')
	file_object.write(str(ZIL))
	file_object.write(' / ')
	file_object.write(str(ZIL_T_TR_D))
	file_object.write(' * ')
	file_object.write(str(ZIL_T_TR_Z))
	file_object.write(' = ')
	file_object.write(str(T_TR_ZIL))

################################################    TTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_ZIL_d))
	file_object.write(' * ')
	file_object.write(str(ZIL_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_ZIL))

################################################    TTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_ZIL_d))
	file_object.write(' * ')
	file_object.write(str(ZIL_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_ZIL))

################################################    TCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTсто')
	file_object.write(' = ')
	file_object.write(str(ZIL_NCTO))
	file_object.write(' * ')
	file_object.write(str(ZIL_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_ZIL))


####################################################################
#                           CK-5
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nCK-5:')

################################################    NKR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNкр')
	file_object.write(' = ')
	file_object.write(str(NKR_CK_d))
	file_object.write(' * ')
	file_object.write(str(CK_T_KR))
	file_object.write(' = ')
	file_object.write(str(T_KR_CK))

################################################   NTR
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(NTR_CK_d))
	file_object.write(' * ')
	file_object.write(str(CK_T_TR))
	file_object.write(' = ')
	file_object.write(str(T_TR_CK))

################################################    NTO-2
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-2')
	file_object.write(' = ')
	file_object.write(str(NTO_2_CK_d))
	file_object.write(' * ')
	file_object.write(str(CK_T_TO_2))
	file_object.write(' = ')
	file_object.write(str(T_TO_2_CK))

################################################    NTO-1
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNто-1')
	file_object.write(' = ')
	file_object.write(str(NTO_1_CK_d))
	file_object.write(' * ')
	file_object.write(str(CK_T_TO_1))
	file_object.write(' = ')
	file_object.write(str(T_TO_1_CK))

################################################    NCTO
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(CK_NCTO))
	file_object.write(' * ')
	file_object.write(str(CK_T_CTO))
	file_object.write(' = ')
	file_object.write(str(T_CTO_CK))




####################################################################
#                           PLN-4-35
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nПЛН-4-35:')

################################################    TTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTтр')
	file_object.write(' = ')
	file_object.write(str(PLN_NTR_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_PLN))
	file_object.write(' = ')
	file_object.write(str(PLN_T_TR))

################################################    TCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nTпсто')
	file_object.write(' = ')
	file_object.write(str(PLN_NCTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_PLN))
	file_object.write(' = ')
	file_object.write(str(PLN_T_CTO))



####################################################################
#                           SZ-3-6
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nСЗ-3-6')

################################################    ТTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nТтр')
	file_object.write(' = ')
	file_object.write(str(SZ_NTR_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_SZ))
	file_object.write(' = ')
	file_object.write(str(SZ_T_TR))

################################################    ТCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nТпсто')
	file_object.write(' = ')
	file_object.write(str(SZ_NCTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_SZ))
	file_object.write(' = ')
	file_object.write(str(SZ_T_CTO))



####################################################################
#                           KKU-2
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nККУ-2А')

################################################    ТTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nТтр')
	file_object.write(' = ')
	file_object.write(str(KKU_NTR_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_KKU))
	file_object.write(' = ')
	file_object.write(str(KKU_T_TR))

################################################    ТCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nТпсто')
	file_object.write(' = ')
	file_object.write(str(KKU_NCTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_KKU))
	file_object.write(' = ')
	file_object.write(str(KKU_T_CTO))



####################################################################
#                           BDT-3
####################################################################


# w перезапись с удалением всего что было
# a дозапись с сохранением старого
with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\n')
	file_object.write('\nБДТ-3')

################################################    NTR

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNтр')
	file_object.write(' = ')
	file_object.write(str(BDT_NTR_d))
	file_object.write(' * ')
	file_object.write(str(T_TR_BDT))
	file_object.write(' = ')
	file_object.write(str(BDT_T_TR))

################################################    NCTO

with open('KURSOVAYA_v1.txt', 'a')as file_object:
	file_object.write('\nNсто')
	file_object.write(' = ')
	file_object.write(str(BDT_NCTO))
	file_object.write(' * ')
	file_object.write(str(T_CTO_BDT))
	file_object.write(' = ')
	file_object.write(str(BDT_T_CTO))


import matplotlib.pyplot as plt


# СПИСКИ В СПИСКАХ - МЕСЯЦЫ
# СЮДА БУДЕМ ПЕРЕНОСИТЬ ЗНАЧЕНИЯ ПЕРЕМЕННЫХ
# ИЗ ДРУГОГО СПИСКА
january = [0]
february = [0]
march = [0]
april = [0]
may = [0]
june = [0]
july = [0]
august = [0]
september = [0]
october = [0]
november = [0]
december = [0]
#вывод списка в косоль
mount = [january,february,march,april,may,june,july,august,september,october,november,december]
print(mount)
#####################################
#
#var = [T_KR_K,T_TR_K,T_TO_3_K,T_KR_K1,T_TR_K1,T_TO_3_K1,DT_T_KR,DT_T_TR,DT_T_TO_3,MTZ2_T_KR,MTZ2_T_TR,MTZ2_T_TO_3,MZT_T_KR,MZT_T_TR,MZT_T_TO_3,T40_T_KR,T40_T_TR,T40_T_TO_3,T25_T_KR,T25_T_TR,T25_T_TO_3,T16_T_KR,T16_T_TR,T16_T_TO_3]
#
#


var = [T_TR_SZ,T_TR_BDT,PLN_T_TR,KKU_T_TR,T_TO_2_CK,T_TR_CK,T_KR_K,T_TR_K,T_TO_3_K,T_KR_K1,T_TR_K1,T_TO_3_K1,DT_T_KR,DT_T_TR,DT_T_TO_3,MTZ2_T_KR,MTZ2_T_TR,MTZ2_T_TO_3,MZT_T_KR,MZT_T_TR,MZT_T_TO_3,T40_T_KR,T40_T_TR,T40_T_TO_3,T25_T_KR,T25_T_TR,T25_T_TO_3,T16_T_KR,T16_T_TR,T16_T_TO_3,T_TO_2_UAZ,T_TO_1_UAZ,T_TO_2_KAMAZ,T_TO_1_KAMAZ,T_TO_2_GAZ,T_TO_1_GAZ,T_TO_2_ZIL,T_TO_1_ZIL]
print(type(var))
print(len(var))
var.sort()


x = (len(var))
print(type(x))  # int
print(x)


print("--------------------------------------------------------------------------------------------")



print(var)
x = len(var)
d = 1
while var[0] == 0:
	var.pop(0)


while x != d:

	if len(var) > d:
		july = list(july)
		july.append(var[0])
		print('july',july)
		jl = sum(map(float,july))
		print(jl)
		var.pop(0)

		if len(var) > d:
			june.append(var[0])
			print('june',june)
			jn = sum(map(float,june))
			print(jn)
			var.pop(0)

			if len(var) > d:
				august.append(var[0])
				print('august',august)
				aug = sum(map(float,august))
				print(aug)
				var.pop(0)

				if len(var) > d:
					may.append(var[0])
					print('may',may)
					m = sum(map(float,may))
					print(m)
					var.pop(0)

					if len(var) > d:
						september.append(var[0])
						print('september',september)
						sept = sum(map(float,september))
						print(sept)
						var.pop(0)

						if len(var) > d:
							april.append(var[0])
							print('april',april)
							apr = sum(map(float,april))
							print(apr)
							var.pop(0)

							if len(var) > d:
								october.append(var[0])
								print('october',october)
								octo = sum(map(float,october))
								print(octo)
								var.pop(0)


								if len(var) > d:

									march.append(var[0])
									print('march',march)
									mar = sum(map(float, march))
									print(mar)
									var.pop(0)

									if len(var) > d:
										november.append(var[0])
										print('november',november)
										nov = sum(map(float,november))
										print(nov)
										var.pop(0)

										if len(var) > d:
											february.append(var[0])
											print('february',february)
											feb = sum(map(float,february))
											print(feb)
											var.pop(0)

											if len(var) > d:
												december.append(var[0])
												print('december',december)
												dec = sum(map(float,december))
												print(dec)
												var.pop(0)

												if len(var) > d:
													january.append(var[0])
													print('january',january)
													jan = sum(map(float,january))
													print(jan)
													var.pop(0)
	else:
		break


import matplotlib.pyplot as plt

print('='*50)


print(jan)
print(feb)
print(mar)
print(apr)
print(m)
print(jn)
print(jl)
print(aug)
print(sept)
print(octo)
print(nov)
print(dec)


s = [jan, feb, mar, apr, m, jn, jl, aug, sept, octo, nov, dec]
x = range(len(s))
ax = plt.gca()
ax.bar(x, s, align='edge')  #align='edge' - выравнивание по границе, а не по центру
ax.set_xticks(x)
ax.set_xticklabels(('янв', 'фев', 'март', 'апр','май','июнь','июль','авг','сент','окт','нояб','дек'))
plt.show()
